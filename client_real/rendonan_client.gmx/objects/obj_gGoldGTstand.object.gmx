<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_GoldGTstand</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>name='(Game) Golden Guardian Tower';
QUpdate=0;
QStart=0;
QPending=0;

//Stats
ownhptotal=10000;
ownhp=ownhptotal
ownhppercent=(ownhp/ownhptotal)*100
level=20;
damage=100;
atkspeed=10;
atkrange=350;


image_index=0.6

orb=instance_create(x,y-85,obj_gGoldGTorb)
orb.stand=id;
orb.ownhp=ownhp;
orb.level=level;
orb.damage=damage;
orb.atkspeed=atkspeed;
orb.atkrange=atkrange;

left=instance_create(x,y,obj_gGoldGTleft)
left.stand=id;
right=instance_create(x,y,obj_gGoldGTright)
right.stand=id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,x,y);
draw_set_alpha(0.45)
draw_set_color(c_white)
draw_roundrect(x-2-0.5*string_width(name+string(" Lv")+string(level)),y-120,x+2+0.5*string_width(name+string(" Lv")+string(level)),y-120+string_height(name+string(" Lv")+string(level)),0)
draw_set_halign(fa_center);
draw_set_alpha(1)
draw_set_color(c_purple);
draw_set_font(ft_NPC);
draw_text(x,y-120,name+string(" Lv")+string(level));
draw_set_color(c_black);

draw_healthbar(x,y-100,x+80,y-94,ownhppercent,c_black,c_red,c_green,0,1,0);
draw_healthbar(x,y-100,x-80,y-94,ownhppercent,c_black,c_red,c_green,0,1,0);


if QStart=1
{draw_sprite_ext(spr_QStart,0,x,y-15,0.7,0.7,0,c_white,1)}

if QUpdate=1
{draw_sprite_ext(spr_QUpdate,0,x,y-15,0.7,0.7,0,c_white,1)}

if QPending=1
{draw_sprite_ext(spr_QPending,0,x,y-15,0.7,0.7,0,c_white,1)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
