<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Light</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>light="off";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_Clock.hour &lt;= 18 &amp;&amp; obj_Clock.hour &gt;=6
{light="off"} else {light="on"}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if light="on"
{
draw_sprite_ext(sprite_index,image_index,x,y,1,1,45,c_white,1)
spotbrightness = point_distance(x,y,obj_tdPlayer.x,obj_tdPlayer.y);
if (spotbrightness&lt;1) {spotbrightness = 1;}
spotbrightness = 0.25/sqrt(spotbrightness);
if (spotbrightness&gt;0.06) {spotbrightness = 0.7;}

//Bright light
draw_light_circle(x,y,10,c_white,0.015,x,y+80,60,c_white,0.015,30);

//Fading Large light
draw_light_circle(x,y+80,150,c_white,0.025,x,y+80,250,c_white,0.015,6);

//draw_light_circle(x,y,10,c_white,0.015,mouse_x,mouse_y,60,c_white,0.015,30);//
//draw_light_circle(mouse_x,mouse_y,55,c_white,spotbrightness,mouse_x,mouse_y,65,c_white,spotbrightness,7);//


//draw_light_circle(x,y+50,30,c_white,spotbrightness,x,y+50,35,c_white,spotbrightness,4);
}
else
{
draw_sprite_ext(sprite_index,image_index,x,y,1,1,0,c_white,0)
}

/*
argument0    x1: x position of circle 1
argument1    y1: y poistion of circle 1
argument2    r1: radius of circle 1
argument3    c1: color of circle 1
argument4    a1: transparency of circle1. Between 0 and 1
argument5    x2: x position of circle 2
argument6    y2: y position of circle 2
argument7    r2: radius of circle 2
argument8    c2: color of circle 2
argument9    a2: transparency of circle 2. Between 0 and 1
argument10   quantity: the number of circles the light is composed of
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
