<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_GoldGTball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rotation=0;

/*
Downloaded from obj_gGoldGTstand
ownhp=10000;
level=20
damage=100;
atkspeed=10;
atkrange=350;
*/


hit=0;
delaymax=30
delay=delaymax

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rotation+=2

delay-=atkspeed
if delay &lt;= 0
{
    hit=1
    delay=delaymax
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,1,1,rotation,c_white,1)


//Blobbs
if instance_exists(obj_Blobb1)
{
    nearest=instance_nearest(x,y,obj_Blobb1)
    {
        if distance_to_object(nearest) &lt;= atkrange
        {
            draw_set_alpha(0.6)
            draw_set_color(c_yellow)
            draw_line(x,y,nearest.x,nearest.y)
            
            if hit=1
            {
                var dmg;
                //dmg=((1/nearest.defence)*round(0.6+random(0.4))*damage)-11+round(random(22));
                dmg = round((1-sqrt(0.001*nearest.defence))*(0.8*damage+round(0.4*damage)));
                nearest.hp-=dmg
                create=instance_create(nearest.x+random(10)-random(10),nearest.y-15,obj_Blobb1Hit)
                create.hurt=dmg
                hit=0
            }            
        }
    }
}


//Snakes
if instance_exists(obj_Snake1)
{
    nearest=instance_nearest(x,y,obj_Snake1)
    {
        if distance_to_object(nearest) &lt;= atkrange
        {
            draw_set_alpha(0.6)
            draw_set_color(c_yellow)
            draw_line(x,y,nearest.x,nearest.y)
            
            if hit=1
            {
                var dmg;
                dmg = round((1-sqrt(0.001*nearest.defence))*(0.8*damage+round(0.4*damage)));
                nearest.hp-=dmg
                create=instance_create(nearest.x+random(10)-random(10),nearest.y-15,obj_Snake1Hit)
                create.hurt=dmg
                hit=0
            }            
        }
    }
}


//Cutters
if instance_exists(obj_Cutter1Core)
{
    nearest=instance_nearest(x,y,obj_Cutter1Core)
    {
        if distance_to_object(nearest) &lt;= atkrange
        {
            draw_set_alpha(0.6)
            draw_set_color(c_yellow)
            draw_line(x,y,nearest.x,nearest.y)
            
            if hit=1
            {
                var dmg;
                dmg = round((1-sqrt(0.001*nearest.defence))*(0.8*damage+round(0.4*damage)));
                nearest.hp-=dmg
                create=instance_create(nearest.x+random(10)-random(10),nearest.y-15,obj_Cutter1Hit)
                create.hurt=dmg
                hit=0
            }            
        }
    }
}

//Cutters
if instance_exists(obj_EColi1)
{
    nearest=instance_nearest(x,y,obj_EColi1)
    {
        if distance_to_object(nearest) &lt;= atkrange
        {
            draw_set_alpha(0.6)
            draw_set_color(c_yellow)
            draw_line(x,y,nearest.x,nearest.y)
            
            if hit=1
            {
                var dmg;
                dmg = round((1-sqrt(0.001*nearest.defence))*(0.8*damage+round(0.4*damage)));
                nearest.hp-=dmg
                create=instance_create(nearest.x+random(10)-random(10),nearest.y-15,obj_EColi1Hit)
                create.hurt=dmg
                hit=0
            }            
        }
    }
}


if keyboard_check(vk_space)
{
    draw_circle(x,y,atkrange,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
