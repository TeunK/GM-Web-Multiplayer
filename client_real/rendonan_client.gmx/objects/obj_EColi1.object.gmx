<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_EColi</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>parent_monster</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

/***************************************************
  ################ Monster Data ####################
 ***************************************************/
number              =1; //defines what number of monster it is, 1 is main parent, when dead - summons 2x number 2 - when those die summon 4x number 3 etc.

name                ="E.Coli";
level               =16;
hp                  =446-45*number;
defence             =80;
droprate            =28;
ExperienceContent   =16+floor(random(8))
movespeed           =3+number;
attack              =5;
attackdelay         =10;     //attackspeed (start from timer2, towards attackdelay ++)





//Aggro distance
if global.daytime="day" {aggrorange=300-30*number;} else {aggrorange=400-30*number;}

//Other Values
spawnx=x            //X-Position for respawn
spawny=y            //Y-Position
hit=0;              //if taking damage
inrange=false;      //if inrange of player
timer2=0;           //initiate attack timer
movement=0;         //timer when to re-select x-y positions
xx=100+random(room_width-100);  //wiggle x pos
yy=100+random(room_height-100); //wiggle y pos
rest=0;             //if moving or not
adder=0;            //Sinus Wiggle effect
hptotal=hp;         //Define Total hp
hppercent=(hp/hptotal)*100//Define hp percentage
nearest=0;
image_speed=0.4
deglitch=20;
//timer=0;
//number=1;
//created=0;
speedcount=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_tdPlayer)
{
    if point_distance(x,y,obj_tdPlayer.x,obj_tdPlayer.y) &gt;= aggrorange
    {
        if rest=0
        {
            if point_distance(x,y,xx,yy) &gt;= 150
            {
                //move_towards_point(xx,yy,0.5*movespeed);
                mp_potential_step_object(xx, yy, 1*movespeed, obj_EColi1)
            }
            else if point_distance(x,y,xx,yy) &lt; 150// &amp;&amp; point_distance(x,y,xx,yy) &gt;= 15
            {
                speed=0;
                rest=1;
            }
        }
    }
    else
    {
        //move_towards_point(obj_tdPlayer.x,obj_tdPlayer.y,0.5*movespeed);
        mp_potential_step_object(obj_tdPlayer.x, obj_tdPlayer.y, 1*movespeed, obj_EColi1)
    }
}

adder+=0.6;

xx+=80*cos(adder)
yy+=80*sin(adder)

//xx=mouse_x
//yy=mouse_y

movement+=1+random(1)
if movement &gt;= 120
{
    xx=0+random(room_width);
    yy=0+random(room_height);
    rest=0;
    movement=0;
}

/*
deglitch-=1
if deglitch&lt;=0
{
    x+=-4+round(random(8))
    y+=-4+round(random(8))
    deglitch=20;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hppercent=(hp/hptotal)*100
if global.daytime="day" {aggrorange=300-30*number;} else {aggrorange=400-30*number;}






//Timer2 data :: Attack
timer2+=1
if timer2 &gt;= attackdelay
{
    if point_distance(x,y,obj_tdPlayer.x,obj_tdPlayer.y) &lt;= 15                              //Attack Player
    {
        monsterattack(1,0);
        //obj_Controller.ownhealth-=attack*(1-sqrt(0.001*obj_Controller.defence));
        //saypc(name +string(" hit you. You lost ") +string(round(attack^-(0.01*obj_Controller.defence))) +string("hp."),c_red);
    }//Damage Formula
    timer2=0
}

//Getting hit by player
if instance_exists(obj_tdPlayer)
{
    if point_distance(x,y,obj_tdPlayer.x,obj_tdPlayer.y) &lt; obj_tdPlayer.attackrange         //if in player's attackrange
        {
            inrange=true;
            if obj_tdPlayer.hitting=1
            {
                //hit = round((1-sqrt(0.001*defence))*0.6+random(0.4)*(obj_Controller.ownstrength^(1+0.05*obj_Controller.weapondamage)))
                monsterattack(0,0);
                hp -= hit                                                                     //Taking Damage when Hit; Change to Player's damage with formula!  &lt;---------------
                create=instance_create(x+random(10)-random(10),y-15,obj_EColi1Hit)
                create.hurt = hit                                                              //Variable to set for damagetaker
                //move_towards_point(obj_tdPlayer.x,obj_tdPlayer.y,-25)
                instance_create(x,y,obj_HitFX);
                speed=0;
            }                                                                     
        
            //}
    
        }
                    else
            {
                inrange=false;
            }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Death Script

if hp &lt;= 0
{
    instance_destroy();
    //SS_PlaySound(global.fx_Splash);
    
    if number &gt;= 5
    {
        if instance_exists(obj_gGoldGTorb)
        {
            if distance_to_object(instance_nearest(x,y,obj_gGoldGTorb)) &gt;= instance_nearest(x,y,obj_gGoldGTorb).atkrange
            {
                Ecoli1Reward();
            }
        }
        else if !instance_exists(obj_gGoldGTorb)
        {
            Ecoli1Reward();
        }
    }
    else
    {
        var spawnspot1x, spawnspot1y, spawnspot2x, spawnspot2y;
        
        spawnspot1x = x-80-round(random(80));
        spawnspot1y = y-80-round(random(80));
        spawnspot2x = x+80+round(random(80));
        spawnspot2y = y+80+round(random(80));
        
        while !place_empty(spawnspot1x,spawnspot1y)
        {
            spawnspot1x = x-80-round(random(80));
            spawnspot1y = y-80-round(random(80));
        }
        while !place_empty(spawnspot2x,spawnspot2y)
        {
            spawnspot2x = x-80-round(random(80));
            spawnspot2y = y-80-round(random(80));
        }
        
        coli1=instance_create(spawnspot1x,spawnspot1y,obj_EColi1)
        coli1.number=number+1;
        coli2=instance_create(spawnspot2x,spawnspot2y,obj_EColi1)
        coli2.number=number+1;
        
        //coli1=instance_create(x-60+round(random(120)),y-60+round(random(120)),obj_EColi1)
        //coli1.number=number+1;
        //coli2=instance_create(x-60+round(random(120)),y-60+round(random(120)),obj_EColi1)
        //coli2.number=number+1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//hit by skill
if distance_to_object(obj_ActionImpale) &lt;= 15
{
    monsterattack(0,1);
    //hit = round((1-sqrt(0.001*defence))*0.6+random(0.4)*(obj_Controller.ownstrength^(1+0.05*obj_Controller.weapondamage)))
    hp -= hit                                                                     //Taking Damage when Hit; Change to Player's damage with formula!  &lt;---------------
    create=instance_create(x+random(10)-random(10),y-15,obj_EColi1Hit)
    create.hurt = hit                                                              //Variable to set for damagetaker
    //move_towards_point(obj_ActionImpale.x,obj_ActionImpale.y,-25)
    instance_create(x,y,obj_HitFX);
}


//GroundShock
if distance_to_object(obj_ActionGroundshock) &lt;= 15
{
    monsterattack(0,2);
    //hit = 2+round((1-sqrt(0.001*defence))*0.5*0.6+random(0.4)*(obj_Controller.ownstrength^(1+0.05*obj_Controller.weapondamage)))
    hp -= hit                                                                     //Taking Damage when Hit; Change to Player's damage with formula!  &lt;---------------
    create=instance_create(x+random(10)-random(10),y-15,obj_EColi1Hit)
    create.hurt = hit                                                              //Variable to set for damagetaker
    //move_towards_point(obj_ActionGroundshock.x,obj_ActionGroundshock.y,-25)
    instance_create(x,y,obj_HitFX);
}

//Energy Blast
if distance_to_object(obj_ActionEnergyBlast) &lt;=300
{
    if obj_ActionEnergyBlast.hitting=1
    {
        monsterattack(0,3);
        hp-=hit
        create=instance_create(x+random(10)-random(10),y-15,obj_EColi1Hit)
        create.hurt = hit                                                              //Variable to set for damagetaker
        //move_towards_point(obj_ActionEnergyBlast.x,obj_ActionEnergyBlast.y,-35)
        instance_create(x,y,obj_HitFX);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//glitchfix
/*
if vspeed+hspeed+speed=0
{
    if x=xprevious &amp;&amp; y=yprevious
    {
        speedcount+=1
    }
}
else
{
    speedcount=0;
}*/

if speedcount &gt;=45
{
    x+=40-round(random(80));
    speedcount=0;
}

if place_meeting(x,y,obj_EColi1)
{
    speedcount+=1;
}
else
{
    speedcount=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,1-0.15*number,1-0.15*number,direction,c_white,1);


draw_set_halign(fa_center);
draw_set_alpha(0.6)

//draw black name background tag
draw_set_color(c_black)
draw_roundrect(x-2-0.5*string_width(name +string(" Lv") +string(level)),y-34,x+2+0.5*string_width(name +string(" Lv")+string(level)),y-25,0)

draw_set_alpha(1)
//Picking Text color depending on the players' and mobs' lvl
if obj_Controller.ownlevel - level &gt;= 2
{draw_set_color(c_white)}
else if obj_Controller.ownlevel - level &lt;= 1 &amp;&amp; obj_Controller.ownlevel - level &gt;= -1
{draw_set_color(c_lime)}
else if obj_Controller.ownlevel - level &lt;= -2 &amp;&amp; obj_Controller.ownlevel - level &gt;= -3
{draw_set_color(c_orange)}
else if obj_Controller.ownlevel - level &lt;= -4 &amp;&amp; obj_Controller.ownlevel - level &gt;= -5
{draw_set_color(c_red)}
else if obj_Controller.ownlevel - level &lt;= -6
{draw_set_color(c_fuchsia)}




draw_set_font(ft_Monster);
draw_text(x,y-36,name +string(" Lv") +string(level));
draw_healthbar(x,y-23,x+40,y-19,hppercent,c_black,c_red,c_green,0,1,0);
draw_healthbar(x,y-23,x-40,y-19,hppercent,c_black,c_red,c_green,0,1,0);

if (inrange)
{
    draw_sprite_ext(spr_Bradar1,0,x,y,1,1,0,c_white,0.5)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>157,28</point>
    <point>100,100</point>
  </PhysicsShapePoints>
</object>
