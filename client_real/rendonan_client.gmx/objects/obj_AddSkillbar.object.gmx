<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_AddSkillbar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>slide=2;        //How far out is the bar
slidespeed=2;   //How fast does the bar slide in/out

sliding=0;      //is it sliding?
slidingright=0; //does it slide right?
slidingleft=0;  //does it slide left?

cable=0;
cable2=0;

magichover=-1;
buffhover=-1;
global.usemagic=magichover;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if slidingright=1 &amp;&amp; slide=1
{
    if cable &lt;= 28 &amp;&amp; cable2=0
    {cable+=slidespeed}
    else
    {slidingright=0; cable=28}
}

if slidingleft=1 &amp;&amp; slide=2
{
    if cable &gt; 0 &amp;&amp; cable2=0
    {cable-=slidespeed}
    else
    {slidingleft=0; cable=0}
}

if slidingright=1 &amp;&amp; slide=0
{
    if cable2 &lt;= 44 &amp;&amp; cable=28
    {cable2+=slidespeed}
    else
    {slidingright=0; cable2=44}
}

if slidingleft=1 &amp;&amp; slide=1
{
    if cable2 &gt; 0 &amp;&amp; cable=28
    {cable2-=slidespeed}
    else
    {slidingleft=0; cable2=0}
}

x=view_xview[0]+893+2*cable
y=view_yview[0]+200-cable



x2=view_xview[0]+893
y2=view_yview[0]+200

x1=view_xview[0]+952
y1=view_yview[0]+169

x0=view_xview[0]+1011
y0=view_yview[0]+169


//bugfix if not sliding right or left then it's simply not sliding..
if slidingright=0 &amp;&amp; slidingleft=0 {sliding=0} else {sliding=1}

x=view_xview[0]+893
y=view_yview[0]+200
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//use buttons for magic.
//magic_trigger();
//for (i=0; i&lt;5; i+=1)
//{
    //magic_trigger(i)
//}

if keyboard_check_released(ord(string(1))) 
{
    if global.usemagic&lt;0 &amp;&amp; !instance_exists(obj_MagicCursor) 
    {
        if skilllevel[1] &lt;= obj_Controller.ownlevel
        {
            if obj_Controller.ownsp &gt; skillcost[1]
            {
                instance_create(mouse_x,mouse_y,obj_MagicCursor);
                obj_Controller.ownsp-=skillcost[1]
                global.usemagic=1-1
            }
            else
            {
                saypc("Not enough SP to use this skill.",c_white);
            }
        }
        else
        {
            saypc("Level too low to use this skill.",c_white);
            exit;
        }
    }
};

else if keyboard_check_released(ord(string(2))) 
{
    if global.usemagic&lt;0 &amp;&amp; !instance_exists(obj_MagicCursor) 
    {
        if skilllevel[2] &lt;= obj_Controller.ownlevel
        {
            if obj_Controller.ownsp &gt; skillcost[2]
            {
                instance_create(mouse_x,mouse_y,obj_MagicCursor);
                obj_Controller.ownsp-=skillcost[2]
                global.usemagic=2-1
            }
            else
            {
                saypc("Not enough SP to use this skill.",c_white);
            }
        }
        else
        {
            saypc("Level too low to use this skill.",c_white);
            exit;
        }
    }
};

else if keyboard_check_released(ord(string(3))) 
{
    if global.usemagic&lt;0 &amp;&amp; !instance_exists(obj_MagicCursor) 
    {
        if skilllevel[3] &lt;= obj_Controller.ownlevel
        {
            if obj_Controller.ownsp &gt; skillcost[3]
            {
                instance_create(mouse_x,mouse_y,obj_MagicCursor);
                obj_Controller.ownsp-=skillcost[3]
                global.usemagic=3-1
            }
            else
            {
                saypc("Not enough SP to use this skill.",c_white);
            }
        }
        else
        {
            saypc("Level too low to use this skill.",c_white);
            exit;
        }
    }
};

else if keyboard_check_released(ord(string(4))) 
{
    if global.usemagic&lt;0 &amp;&amp; !instance_exists(obj_MagicCursor) 
    {
        if skilllevel[4] &lt;= obj_Controller.ownlevel
        {
            if obj_Controller.ownsp &gt; skillcost[4]
            {
                instance_create(mouse_x,mouse_y,obj_MagicCursor);
                obj_Controller.ownsp-=skillcost[4]
                global.usemagic=4-1
            }
            else
            {
                saypc("Not enough SP to use this skill.",c_white);
            }
        }
        else
        {
            saypc("Level too low to use this skill.",c_white);
            exit;
        }
    }
};

else if keyboard_check_released(ord(string(5))) 
{
    if global.usemagic&lt;0 &amp;&amp; !instance_exists(obj_MagicCursor) 
    {
        if skilllevel[5] &lt;= obj_Controller.ownlevel
        {
            if obj_Controller.ownsp &gt; skillcost[5]
            {
                instance_create(mouse_x,mouse_y,obj_MagicCursor);
                obj_Controller.ownsp-=skillcost[5]
                global.usemagic=5-1
            }
            else
            {
                saypc("Not enough SP to use this skill.",c_white);
            }
        }
        else
        {
            saypc("Level too low to use this skill.",c_white);
            exit;
        }
    }
};

else if keyboard_check_released(ord(string(6))) 
{
    if global.usemagic&lt;0 &amp;&amp; !instance_exists(obj_MagicCursor) 
    {
        if skilllevel[6] &lt;= obj_Controller.ownlevel
        {
            if obj_Controller.ownsp &gt; skillcost[6]
            {
                instance_create(mouse_x,mouse_y,obj_MagicCursor);
                obj_Controller.ownsp-=skillcost[6]
                global.usemagic=6-1
            }
            else
            {
                saypc("Not enough SP to use this skill.",c_white);
            }
        }
        else
        {
            saypc("Level too low to use this skill.",c_white);
            exit;
        }
    }
};

else if keyboard_check_released(ord(string(7))) 
{
    if global.usemagic&lt;0 &amp;&amp; !instance_exists(obj_MagicCursor) 
    {
        if skilllevel[7] &lt;= obj_Controller.ownlevel
        {
            if obj_Controller.ownsp &gt; skillcost[7]
            {
                instance_create(mouse_x,mouse_y,obj_MagicCursor);
                obj_Controller.ownsp-=skillcost[7]
                global.usemagic=7-1
            }
            else
            {
                saypc("Not enough SP to use this skill.",c_white);
            }
        }
        else
        {
            saypc("Level too low to use this skill.",c_white);
            exit;
        }
    }
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if mouse_x &gt; view_xview[0]+893
//{
    if magichover&gt;=0 {global.usemagic=magichover}
    if buffhover&gt;=0 {global.usebuff=buffhover}
//}



if magichover&gt;=0 &amp;&amp; !instance_exists(obj_MagicCursor) 
{
    if skilllevel[magichover+1] &lt;= obj_Controller.ownlevel
    {
        if obj_Controller.ownsp &gt; skillcost[magichover+1]
        {
            instance_create(mouse_x,mouse_y,obj_MagicCursor); obj_Controller.ownsp-=skillcost[magichover+1]
        }
        else
        {
            saypc("Not enough SP to use this skill.",c_white);
        }
    }
    else
    {
        saypc("Level too low to use this skill.",c_white);
    }
}


//if magichover&lt;0 &amp;&amp; instance_exists(obj_MagicCursor) {with (obj_MagicCursor) {instance_destroy()}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,view_xview[0]+893+2*cable+cable2,view_yview[0]+200-cable)





//draw Skills
draw_set_color(c_white);
draw_set_alpha(0.5);

var xxx,yyy;
xxx=view_xview[0]+892+2*cable+cable2;
yyy=view_yview[0]+204-cable;

for(i=0;i&lt;7;i+=1)
{
    draw_rectangle(xxx+15,yyy+48+26*i,xxx+15+26,yyy+48+26+26*i,1); //Left Skillbar
    draw_rectangle(xxx+57,yyy+16+26*i,xxx+57+26,yyy+16+26+26*i,1); //Right Skillbar
    
    //Left Skillbar
    if mouse_x &gt;= xxx+15 &amp;&amp;
        mouse_x &lt;= xxx+15+26 &amp;&amp;
         mouse_y &gt;= yyy+48+26*i &amp;&amp;
          mouse_y &lt;= yyy+48+26+26*i
          {
            //draw_text(50,50,"Selected: Left" +string(i));
            //show_message(i);
            //NOTE: i = selected (on top of bar i)
            magichover=i;
          }
          else if
          magichover!=-1 &amp;&amp;
          (
             mouse_x &lt; xxx+15
          || mouse_y &lt; yyy+30//48//+26*i 
          || mouse_x &gt; xxx+15+26 
          || mouse_y &gt; yyy+48+26+128//+26*i
          ) 
          {
              magichover=-1;
              if global.usemagic&gt;=0 &amp;&amp; mouse_check_button_pressed(mb_right) {global.usemagic=-1}
          }
          
    //Right Skillbar
    if mouse_x &gt;= xxx+57 &amp;&amp;
        mouse_x &lt;= xxx+57+26 &amp;&amp;
         mouse_y &gt;= yyy+16+26*i &amp;&amp;
          mouse_y &lt;= yyy+16+26+26*i
          {
            //draw_text(50,50,"Selected: Right" +string(i));
            //show_message(i);
            //NOTE: i = selected (on top of bar i)
            buffhover=i;
          }
          else if
          buffhover!=-1 &amp;&amp;
          (
             mouse_x &lt; xxx+57
          || mouse_y &lt; yyy+0//+26*i 
          || mouse_x &gt; xxx+57+26
          || mouse_y &gt; yyy+16+26+128//+26*i
          ) 
          {buffhover=-1;}
          //else if (mouse_x &lt; xxx+57 || mouse_y &lt; yyy+16+26*i || mouse_x &gt; xxx+57+26 || mouse_y &gt; yyy+16+26+26*i) {buffhover=-1;}

    yyy+=3
}



draw_set_alpha(0.2);
xxx=view_xview[0]+892+2*cable+cable2;
yyy=view_yview[0]+204-cable;

for(i=0;i&lt;7;i+=1)
{

    //draw Inside of Left AddSkillbar
    draw_set_alpha(0.2);
    if magichover=i {draw_set_alpha(0.4)} else {draw_set_alpha(0.2)};
    
    draw_rectangle(xxx+15,yyy+48+26*i,xxx+15+26,yyy+48+26+26*i,0);
    
    //draw Inside of Right AddSkillbar
    draw_set_alpha(0.2);
    if buffhover=i {draw_set_alpha(0.4)} else {draw_set_alpha(0.2)};

    draw_rectangle(xxx+57,yyy+16+26*i,xxx+57+26,yyy+16+26+26*i,0);
    yyy+=3
}




draw_sprite(spr_AddSkillbarDragon,image_index,view_xview[0]+893+2*cable+cable2,view_yview[0]+200-cable)
scr_SkillList();
//reset xxx/yyy
xxx=view_xview[0]+892+2*cable+cable2;
yyy=view_yview[0]+204-cable;
//Draw Skill Icons
//magic

for (i=0; i&lt;7; i+=1)
{
    if magichover=i
    {draw_sprite_ext(spr_MageSkills,i,xxx+15+13,yyy+48+13+26*i,1.2,1.2,0,c_white,1)};
    else 
    {draw_sprite_ext(spr_MageSkills,i,xxx+15+13,yyy+48+13+26*i,1,1,0,c_white,1)}              
    yyy+=3
}

//reset xxx/yyy
xxx=view_xview[0]+892+2*cable+cable2;
yyy=view_yview[0]+204-cable;
//buffs
for (i=0; i&lt;7; i+=1)
{
    if buffhover=i
    {draw_sprite_ext(spr_BuffSkills,i,xxx+57+13,yyy+16+13+26*i,1.2,1.2,0,c_white,1)};
    else 
    {draw_sprite_ext(spr_BuffSkills,i,xxx+57+13,yyy+16+13+26*i,1,1,0,c_white,1)}         
    yyy+=3
}


draw_set_halign(fa_left);
draw_set_font(ft_NPC);
if (magichover !=-1)
{
    draw_set_color(c_black);
    draw_set_alpha(0.6);
    draw_rectangle(view_xview[0]+700,view_yview[0]+480,view_xview[0]+1000,view_yview[0]+538,0);
    draw_set_color(c_white);
    draw_rectangle(view_xview[0]+700,view_yview[0]+480,view_xview[0]+1000,view_yview[0]+538,1);
    draw_set_color(c_orange);
    //Skill Name
    if skilllevel[magichover+1] &lt;= obj_Controller.ownlevel {draw_set_color(c_lime)} else {draw_set_color(c_red)}
    draw_text(view_xview[0]+710,view_yview[0]+480,string(skillname[magichover+1])+string(" Lv")+string(skilllevel[magichover+1]));
    //draw_text(view_xview[0]+710,view_yview[0]+480,string(skillname[magichover+1]));
    draw_set_color(c_white);
    //Skill Effects
    draw_text(view_xview[0]+710,view_yview[0]+490,string(skilleffect[magichover+1]));
    draw_text(view_xview[0]+710,view_yview[0]+500,string("Damage: ") +string(skilldamage[magichover+1]));
    draw_text(view_xview[0]+710,view_yview[0]+510,string("Cooldown Time: ")+string(skillcooldown[magichover+1]/30)+string(" seconds"));
    draw_text(view_xview[0]+710,view_yview[0]+520,string("Skill Range: ")+string(skillrange[magichover+1])+string("m"));
    draw_set_halign(fa_right);
    if obj_Controller.ownsp&gt;=skillcost[magichover+1] {draw_set_color(c_lime)} else {draw_set_color(c_red)};
    draw_text(view_xview[0]+980,view_yview[0]+520,string("Skill Cost: ")+string(skillcost[magichover+1])+string(" sp"));
}
draw_set_halign(fa_left);
if (buffhover !=-1)
{
    draw_set_color(c_black);
    draw_set_alpha(0.6);
    draw_rectangle(view_xview[0]+700,view_yview[0]+480,view_xview[0]+1000,view_yview[0]+538,0);
    draw_set_color(c_white);
    draw_rectangle(view_xview[0]+700,view_yview[0]+480,view_xview[0]+1000,view_yview[0]+538,1);
    draw_set_color(c_orange);
    //Buff Name
    if bufflevel[buffhover+1] &lt;= obj_Controller.ownlevel {draw_set_color(c_lime)} else {draw_set_color(c_red)}
    draw_text(view_xview[0]+710,view_yview[0]+480,string(buffname[buffhover+1])+string(" Lv")+string(bufflevel[buffhover+1]));
    draw_set_color(c_white);
    //Skill Effects
    draw_text(view_xview[0]+710,view_yview[0]+490,string(buffeffect[buffhover+1]));
    draw_text(view_xview[0]+710,view_yview[0]+500,string("Duration: ") +string(bufftime[buffhover+1]/30)+string(" seconds"));
    draw_text(view_xview[0]+710,view_yview[0]+510,string("Cooldown Time: ")+string(buffcooldown[buffhover+1]/30)+string(" seconds"));
    draw_set_halign(fa_right)
    if obj_Controller.ownsp&gt;=buffcost[buffhover+1] {draw_set_color(c_lime)} else {draw_set_color(c_red)};
    draw_text(view_xview[0]+980,view_yview[0]+520,string("Skill Cost: ")+string(buffcost[buffhover+1])+string(" sp"));
}






/*


    if i=7
    {
    //MAGIC
        skillname[i]="Sunflash";
        skilllevel[i]=28;
        skilleffect[i]="A burst of sunrays hits the desegnated area vaporizing everything in its path.";
        skilldamage[i]=40;
        skillcooldown[i]=300*30;
        skillrange[i]=28;
    //BUFF
        buffname[i]="Panic";
        bufflevel[i]=26;
        buffeffect[i]="Makes monsters flee from you.";
        bufftime[i]=20*30;
        buffcooldown[i]=250*30;
    }




if sliding=0
{
    if slide=2
    {
    draw_sprite(sprite_index,image_index,view_xview[0]+893,view_yview[0]+200)
    }
    
    if slide=1
    {
    draw_sprite(sprite_index,image_index,view_xview[0]+952,view_yview[0]+169)
    }
    
    if slide=0
    {
    draw_sprite(sprite_index,image_index,view_xview[0]+1011,view_yview[0]+169)
    }
}

else if sliding=1
{
    draw_sprite(sprite_index,image_index,x,y)
}

//draw_sprite(sprite_index,image_index,view_xview[0]+893,view_yview[0]+200)

draw_text(x2,y2,"Slide2")
draw_text(x1,y1,"Slide1")
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
