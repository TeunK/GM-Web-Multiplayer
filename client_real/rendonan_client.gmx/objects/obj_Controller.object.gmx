<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-276447231</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamestart=1

if instance_exists(obj_Verifier)
{
    username=obj_Verifier.name
    client=obj_Verifier.gameclient
    with (obj_Verifier) instance_destroy();
    
    
    http_dll_init();
    
    //var httprequest, st;
    httpdownload = httprequest_create();
    buffer=buffer_create();
    httprequest_set_request_header(httpdownload, "User-Agent", "httpdll", true)
    
    //set _POST variables
    httprequest_set_post_parameter(httpdownload, "username", username);
    
    
    // the third argument: true=POST; false=GET
    httprequest_connect(httpdownload, "http://www.rendonan.com/gameloadstats.php", true);
    
    httprequest_get_message_body_buffer(httpdownload, buffer)
    
    for (i=0; i&lt;10; i+=1)
    {
        buffer_read_string(buffer)
    }
    
    //buffer_destroy(buffer);
    

}



    
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>created=0
DrawHelp=0
//Note Cheaters
cheating=0
setstats=0;

instance_create(0,0,obj_Backgrounddrawer);

//chat-text thingy
text="";
typing=0;

if created=0 {visible=false}
 
//Zoom info
width=1000;
height=640;

global.ComeFromTutorial=0;
scr_Questdatabase();

//Autosave Game Data every x time
autosave = 120*30;

//Level up drawing, notification
levelupsign=0;
levelupsigntime=0;


/*if created=0 &amp;&amp; room != room_Initials{


    created=1
    
    //store x and y position
    global.xx=room_width/2
    global.yy=room_height/2
    
    //Set Gamename in header
    set_application_title("Play Rendonan")
    
    global.centermapx = view_xview[0]+500;
    global.centermapy = view_yview[0]+320;
    
    //Volume Status
    global.volume=0.4 //ALREADY DEFINED BY OBJ_BTNCONTROLLER
    volumeset=0
    volumeamount=50
    
    //Magic Skills
    global.usemagic=0;
    //Magic Buffs
    global.usebuff=0;
    
    
    
    
    /***************************************************
      PLAYER STATS
     ***************************************************
     
    //Health
    ownhealthtotal      =   100
    ownhealth           =   ownhealthtotal
    ownhealthpercent    =   (ownhealth/ownhealthtotal)*100
    
    //SP
    ownsptotal          =   100
    ownsp               =   ownsptotal
    ownsppercent        =   (ownsp/ownsptotal)*100
    
    //Experience
    ownexptotal         =   100
    ownexp              =   0
    ownexppercent       =   (ownexp/ownexptotal)*100
    
    //Skillpoint
    ownskillpoint       =   0
    ownskillpointused   =   0
    
    
    //Statpoint
    ownstatpoint        =   5
    ownstatpointused    =   0
    
    //Level
    ownlevel            =   1
    
    //Strength
    ownstrength         =   10
    
    //Weapon Damagebonus
    weapondamage        =   1
    
    //Range
    attackrange         =   20
    
    //Damage
    ownmindamage        =   round(0.6*(ownstrength*weapondamage))
    ownmaxdamage        =   round(1.4*(ownstrength*weapondamage))
    owndeltadamage      =   ownmaxdamage - ownmindamage
    
    //Attackspeed
    attackspeed         =   1
    
    //Chains
    learnchain1         =   1
    
    //Movementspeed
    tdmovespeed         =   6
    pmovespeed          =   6
    
    //Defence
    defence             =   0                       
    
    //Money
    money               =   0
    
    //Quests
    global.quest1reward =   0
    global.quest2reward =   0
    global.quest3reward =   0
    global.quest4reward =   0
    global.quest5reward =   0
    global.quest6reward =   0
    global.quest7reward =   0
    global.quest8reward =   0
    
    /***************************************************
      PLAYER STATS
     ***************************************************
     
    
     
 
 }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*

show_message("Controller is created!");

created=0
DrawHelp=0
setstats=0;

//Note Cheaters
cheating=0

//chat-text thingy
text="";
typing=0;

if created=0 {visible=false}

//Zoom info
width=1000;
height=640;


scr_Questdatabase();


if created=0 &amp;&amp; room != room_Initials
{
    created=1
    
    //store x and y position
    global.xx=room_width/2
    global.yy=room_height/2
    
    //Set Gamename in header
    set_application_title("Play Rendonan")
    
    global.centermapx = view_xview[0]+500;
    global.centermapy = view_yview[0]+320;
    
    //Volume Status
    global.volume=1
    volumeset=0
    volumeamount=140
    
    //Magic Skills
    global.usemagic=0;
    //Magic Buffs
    global.usebuff=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>801</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_cursor</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>-1</sprite>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*

created=0
DrawHelp=0
//Note Cheaters
cheating=0

//chat-text thingy
text="";
typing=0;

if created=0 {visible=false}

//Zoom info
width=1000;
height=640;

global.ComeFromTutorial=0;
scr_Questdatabase();

if created=0 &amp;&amp; room != room_Initials{


created=1

//store x and y position
global.xx=room_width/2
global.yy=room_height/2

//Set Gamename in header
set_application_title("Play Rendonan")

global.centermapx = view_xview[0]+500;
global.centermapy = view_yview[0]+320;

//Volume Status
global.volume=1
volumeset=0
volumeamount=140

//Magic Skills
global.usemagic=0;
//Magic Buffs
global.usebuff=0;


//***************************************************
//  PLAYER STATS
// ***************************************************
 
//Health
//ownhealthtotal      =   100
//ownhealth           =   ownhealthtotal
ownhealthpercent    =   (ownhealth/ownhealthtotal)*100

//SP
//ownsptotal          =   100
//ownsp               =   ownsptotal
ownsppercent        =   (ownsp/ownsptotal)*100

//Experience
//ownexptotal         =   100
//ownexp              =   0
ownexppercent       =   (ownexp/ownexptotal)*100

//Skillpoint
//ownskillpoint       =   0
//ownskillpointused   =   0


//Statpoint
//ownstatpoint        =   5
//ownstatpointused    =   0

//Level
//ownlevel            =   1

//Strength
//ownstrength         =   10

//Weapon Damagebonus
//weapondamage        =   1

//Range
//attackrange         =   20

//Damage
ownmindamage        =   round(0.6*(ownstrength*weapondamage))
ownmaxdamage        =   round(1.4*(ownstrength*weapondamage))
owndeltadamage      =   ownmaxdamage - ownmindamage

//Attackspeed
//attackspeed         =   1

//Chains
//learnchain1         =   1

//Movementspeed
tdmovespeed         =   6
pmovespeed          =   6

//Defence
//defence             =   0                       

//Money
//money               =   0

//Quests
//global.quest1reward =   0
//global.quest2reward =   0
//global.quest3reward =   0
//global.quest4reward =   0
//global.quest5reward =   0
//global.quest6reward =   0
//global.quest7reward =   0
//global.quest8reward =   0

//***************************************************
//  PLAYER STATS
// ***************************************************
 

 
 
 }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
name="";
    admin=-1;
    map="";
    money=-1;
    
    ComeFromTutorial=-1;
    ownhealthtotal=-1;
    ownhealth=-1;
    s_hp=-1;    
    ownsptotal=-1;
    ownsp=-1;
    s_sp=-1;
    ownstrength=-1;
    s_str=-1;
    attackrange=-1;
    s_range=-1;
    agility=-1;
    s_agility=-1;
    defence=-1;
    s_def=-1;
    ownexptotal=-1;
    ownexp=-1;
    level=-1;
    ownskillpoint=-1;
    ownskillpointused=-1;
    ownstatpoint=-1;
    ownstatpointused=-1;
    weapondamage=-1;
    attackspeed=-1;
    leanchain1=-1;
    questscomplete=-1;
    questmax=-1;
    Questactive[1]=-1;
    Questpart[1]=-1;
    Questactive[2]=-1;
    Questpart[2]=-1;
    Questactive[3]=-1;
    Questpart[3]=-1;
    Questactive[4]=-1;
    Questpart[4]=-1;
    Questactive[5]=-1;
    Questpart[5]=-1;
    Questactive[6]=-1;
    Questpart[6]=-1;
    Questactive[7]=-1;
    Questpart[7]=-1;
    Questactive[8]=-1;
    Questpart[8]=-1;
    Questactive[9]=-1;
    Questpart[9]=-1;
    Questactive[10]=-1;
    Questpart[10]=-1;
    Questactive[11]=-1;
    Questpart[11]=-1;
    Questactive[12]=-1;
    Questpart[12]=-1;
    Questactive[13]=-1;
    Questpart[13]=-1;
    Questactive[14]=-1;
    Questactive[15]=-1;
    Questpart[15]=-1;
    Questactive[16]=-1;
    Questpart[16]=-1;
    Questactive[17]=-1;
    Questpart[17]=-1;
    Questactive[18]=-1;
    Questpart[18]=-1;
    Questactive[19]=-1;
    Questpart[19]=-1;
    quest1reward=-1;
    quest2reward=-1;
    quest3reward=-1;
    quest4reward=-1;
    quest5reward=-1;
    quest6reward=-1;
    quest7reward=-1;
    quest8reward=-1;
    armor_top=-1;
    Boss1respawn=-1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Online Variable</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_Online);

chatreconnecttimer=0;
chatreconnecttime=60; //time in seconds
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>notice from admin</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>notice=0;
noticemsg="";
noticetimer=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>socket_destroy(socket);
buffer_destroy(global.chatbuffer);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room !=room_Initials socket_update_write(socket);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>CONNECTION</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/***************************************************
      DOWNLOAD DATA FROM DATABASE VIA PHP SCRIPT!!()%&amp;
     ***************************************************/
if setstats=0
{
    var st;
    if httpdownload!=-1 {
    
        httprequest_update(httpdownload);
        st = httprequest_get_state(httpdownload);
        if st=4 {
    
            httprequest_get_message_body_buffer(httpdownload, buffer)
            
            
            //Load Values from Buffer
            //username = buffer_read_string(buffer)
            //client = real(buffer_read_string(buffer));
            admin = real(buffer_read_string(buffer));
            map = buffer_read_string(buffer);
            money = real(buffer_read_string(buffer));
            
            global.ComeFromTutorial = real(buffer_read_string(buffer));
            ownhealthtotal = real(buffer_read_string(buffer));
            ownhealth = real(buffer_read_string(buffer));
            s_hp = real(buffer_read_string(buffer));
            ownsptotal = real(buffer_read_string(buffer));         
            ownsp = real(buffer_read_string(buffer));
            s_sp = real(buffer_read_string(buffer));
            ownstrength = real(buffer_read_string(buffer));
            s_str = real(buffer_read_string(buffer));
            attackrange = real(buffer_read_string(buffer));
            s_range = real(buffer_read_string(buffer));
            agility = real(buffer_read_string(buffer));
            s_ag = real(buffer_read_string(buffer));
            defence = real(buffer_read_string(buffer));
            s_def = real(buffer_read_string(buffer));
            ownexptotal = real(buffer_read_string(buffer));
            ownexp = real(buffer_read_string(buffer));
            ownlevel = real(buffer_read_string(buffer));
            ownskillpoint = real(buffer_read_string(buffer));
            ownskillpointused = real(buffer_read_string(buffer));
            ownstatpoint = real(buffer_read_string(buffer));
            ownstatpointused = real(buffer_read_string(buffer));
            weapondamage = 0.01*real(buffer_read_string(buffer));
            attackspeed = real(buffer_read_string(buffer));
            learnchain1 = real(buffer_read_string(buffer));
            questscomplete = real(buffer_read_string(buffer));
            questmax = real(buffer_read_string(buffer));
            Questactive[1] = real(buffer_read_string(buffer));
            Questpart[1] = real(buffer_read_string(buffer));
            Questactive[2] = real(buffer_read_string(buffer));
            Questpart[2] = real(buffer_read_string(buffer));
            Questactive[3] = real(buffer_read_string(buffer));
            Questpart[3] = real(buffer_read_string(buffer));
            Questactive[4] = real(buffer_read_string(buffer));
            Questpart[4] = real(buffer_read_string(buffer));
            Questactive[5] = real(buffer_read_string(buffer));
            Questpart[5] = real(buffer_read_string(buffer));
            Questactive[6] = real(buffer_read_string(buffer));
            Questpart[6] = real(buffer_read_string(buffer));
            Questactive[7] = real(buffer_read_string(buffer));
            Questpart[7] = real(buffer_read_string(buffer));
            Questactive[8] = real(buffer_read_string(buffer));
            Questpart[8] = real(buffer_read_string(buffer));
            Questactive[9] = real(buffer_read_string(buffer));
            Questpart[9] = real(buffer_read_string(buffer));
            Questactive[10] = real(buffer_read_string(buffer));
            Questpart[10] = real(buffer_read_string(buffer));
            Questactive[11] = real(buffer_read_string(buffer));
            Questpart[11] = real(buffer_read_string(buffer));
            Questactive[12] = real(buffer_read_string(buffer));
            Questpart[12] = real(buffer_read_string(buffer));
            Questactive[13] = real(buffer_read_string(buffer));
            Questpart[13] = real(buffer_read_string(buffer));
            Questactive[14] = real(buffer_read_string(buffer));
            Questpart[14] = real(buffer_read_string(buffer));
            Questactive[15] = real(buffer_read_string(buffer));
            Questpart[15] = real(buffer_read_string(buffer));
            Questactive[16] = real(buffer_read_string(buffer));
            Questpart[16] = real(buffer_read_string(buffer));
            Questactive[17] = real(buffer_read_string(buffer));
            Questpart[17] = real(buffer_read_string(buffer));
            Questactive[18] = real(buffer_read_string(buffer));
            Questpart[18] = real(buffer_read_string(buffer));
            Questactive[19] = real(buffer_read_string(buffer));
            Questpart[19] = real(buffer_read_string(buffer));
            global.quest1reward = real(buffer_read_string(buffer));
            global.quest2reward = real(buffer_read_string(buffer));
            global.quest3reward = real(buffer_read_string(buffer));
            global.quest4reward = real(buffer_read_string(buffer));
            global.quest5reward = real(buffer_read_string(buffer));
            global.quest6reward = real(buffer_read_string(buffer));
            global.quest7reward = real(buffer_read_string(buffer));
            global.quest8reward = real(buffer_read_string(buffer));
            armor_top = real(buffer_read_string(buffer));
            global.Boss1respawn = real(buffer_read_string(buffer));
            
            global.paid = real(buffer_read_string(buffer)); 
            
            saveitem0 = real(buffer_read_string(buffer));  
            saveqitem0 = real(buffer_read_string(buffer));     
            
            saveitem1 = real(buffer_read_string(buffer));          
            saveqitem1 = real(buffer_read_string(buffer));          
            
            saveitem2 = real(buffer_read_string(buffer));          
            saveqitem2 = real(buffer_read_string(buffer));          
            
            saveitem3 = real(buffer_read_string(buffer));          
            saveqitem3 = real(buffer_read_string(buffer));          
            
            saveitem4 = real(buffer_read_string(buffer));          
            saveqitem4 = real(buffer_read_string(buffer));          
            
            saveitem5 = real(buffer_read_string(buffer));          
            saveqitem5 = real(buffer_read_string(buffer));          
            
            saveitem6 = real(buffer_read_string(buffer));          
            saveqitem6 = real(buffer_read_string(buffer));          
            
            saveitem7 = real(buffer_read_string(buffer));          
            saveqitem7 = real(buffer_read_string(buffer));          
            
            saveitem8 = real(buffer_read_string(buffer));          
            saveqitem8 = real(buffer_read_string(buffer));          
            
            saveitem9 = real(buffer_read_string(buffer));          
            saveqitem9 = real(buffer_read_string(buffer));          
            
            saveitem10 = real(buffer_read_string(buffer));          
            saveqitem10 = real(buffer_read_string(buffer));          
            
            saveitem11 = real(buffer_read_string(buffer));          
            saveqitem11 = real(buffer_read_string(buffer));          
            
            saveitem12 = real(buffer_read_string(buffer));          
            saveqitem12 = real(buffer_read_string(buffer));          
            
            saveitem13 = real(buffer_read_string(buffer));          
            saveqitem13 = real(buffer_read_string(buffer));          
            
            saveitem14 = real(buffer_read_string(buffer));          
            saveqitem14 = real(buffer_read_string(buffer));          
            
            saveitem15 = real(buffer_read_string(buffer));          
            saveqitem15 = real(buffer_read_string(buffer));          
            
            saveitem16 = real(buffer_read_string(buffer));          
            saveqitem16 = real(buffer_read_string(buffer));          
            
            saveitem17 = real(buffer_read_string(buffer));          
            saveqitem17 = real(buffer_read_string(buffer));          
            
            saveitem18 = real(buffer_read_string(buffer));          
            saveqitem18 = real(buffer_read_string(buffer));          
            
            saveitem19 = real(buffer_read_string(buffer));          
            saveqitem19 = real(buffer_read_string(buffer));          
            
            saveitem20 = real(buffer_read_string(buffer));          
            saveqitem20 = real(buffer_read_string(buffer));          
            
            saveitem21 = real(buffer_read_string(buffer));          
            saveqitem21 = real(buffer_read_string(buffer));          
            
            saveitem22 = real(buffer_read_string(buffer));          
            saveqitem22 = real(buffer_read_string(buffer));          
            
            saveitem23 = real(buffer_read_string(buffer));          
            saveqitem23 = real(buffer_read_string(buffer));          
            
            saveitem24 = real(buffer_read_string(buffer));          
            saveqitem24 = real(buffer_read_string(buffer));          
            
            saveitem25 = real(buffer_read_string(buffer));          
            saveqitem25 = real(buffer_read_string(buffer));          
            
            saveitem26 = real(buffer_read_string(buffer));          
            saveqitem26 = real(buffer_read_string(buffer));          
            
            saveitem27 = real(buffer_read_string(buffer));          
            saveqitem27 = real(buffer_read_string(buffer));          
            
            saveitem28 = real(buffer_read_string(buffer));          
            saveqitem28 = real(buffer_read_string(buffer));          
            
            saveitem29 = real(buffer_read_string(buffer));          
            saveqitem29 = real(buffer_read_string(buffer));          
            
            saveitem30 = real(buffer_read_string(buffer));          
            saveqitem30 = real(buffer_read_string(buffer));          
            
            saveitem31 = real(buffer_read_string(buffer));          
            saveqitem31 = real(buffer_read_string(buffer));          
            
            saveitem32 = real(buffer_read_string(buffer));          
            saveqitem32 = real(buffer_read_string(buffer));          
            
            saveitem33 = real(buffer_read_string(buffer));          
            saveqitem33 = real(buffer_read_string(buffer));          
            
            saveitem34 = real(buffer_read_string(buffer));          
            saveqitem34 = real(buffer_read_string(buffer));          
            
            saveitem35 = real(buffer_read_string(buffer));          
            saveqitem35 = real(buffer_read_string(buffer));          
            
            saveitem36 = real(buffer_read_string(buffer));          
            saveqitem36 = real(buffer_read_string(buffer));          
            
            saveitem37 = real(buffer_read_string(buffer));          
            saveqitem37 = real(buffer_read_string(buffer));          
            
            saveitem38 = real(buffer_read_string(buffer));          
            saveqitem38 = real(buffer_read_string(buffer));          
            
            saveitem39 = real(buffer_read_string(buffer));          
            saveqitem39 = real(buffer_read_string(buffer));          
            
            saveitem40 = real(buffer_read_string(buffer));          
            saveqitem40 = real(buffer_read_string(buffer));          
            
            saveitem41 = real(buffer_read_string(buffer));          
            saveqitem41 = real(buffer_read_string(buffer));          
            
            saveitem42 = real(buffer_read_string(buffer));          
            saveqitem42 = real(buffer_read_string(buffer));          
            
            saveitem43 = real(buffer_read_string(buffer));          
            saveqitem43 = real(buffer_read_string(buffer));          
            
            saveitem44 = real(buffer_read_string(buffer));          
            saveqitem44 = real(buffer_read_string(buffer));          
            
            saveitem45 = real(buffer_read_string(buffer));          
            saveqitem45 = real(buffer_read_string(buffer));          
            
            saveitem46 = real(buffer_read_string(buffer));          
            saveqitem46 = real(buffer_read_string(buffer));          
            
            saveitem47 = real(buffer_read_string(buffer));          
            saveqitem47 = real(buffer_read_string(buffer));          
            
            saveitem48 = real(buffer_read_string(buffer));          
            saveqitem48 = real(buffer_read_string(buffer));          
            
            saveitem49 = real(buffer_read_string(buffer));          
            saveqitem49 = real(buffer_read_string(buffer));          
            
            saveitem50 = real(buffer_read_string(buffer));          
            saveqitem50 = real(buffer_read_string(buffer));          
            
            saveitem51 = real(buffer_read_string(buffer));          
            saveqitem51 = real(buffer_read_string(buffer));          
            
            saveitem52 = real(buffer_read_string(buffer));          
            saveqitem52 = real(buffer_read_string(buffer));          
            
            saveitem53 = real(buffer_read_string(buffer));          
            saveqitem53 = real(buffer_read_string(buffer));          
            
            saveitem54 = real(buffer_read_string(buffer));          
            saveqitem54 = real(buffer_read_string(buffer));          
            
            saveitem55 = real(buffer_read_string(buffer));          
            saveqitem55 = real(buffer_read_string(buffer));          
            
            saveitem56 = real(buffer_read_string(buffer));          
            saveqitem56 = real(buffer_read_string(buffer));          
            
            saveitem57 = real(buffer_read_string(buffer));          
            saveqitem57 = real(buffer_read_string(buffer));          
            
            saveitem58 = real(buffer_read_string(buffer));          
            saveqitem58 = real(buffer_read_string(buffer));          
            
            saveitem59 = real(buffer_read_string(buffer));          
            saveqitem59 = real(buffer_read_string(buffer));          
            
            saveitem60 = real(buffer_read_string(buffer));          
            saveqitem60 = real(buffer_read_string(buffer));          
            
            saveitem61 = real(buffer_read_string(buffer));          
            saveqitem61 = real(buffer_read_string(buffer));          
            
            saveitem62 = real(buffer_read_string(buffer));          
            saveqitem62 = real(buffer_read_string(buffer));          
            
            saveitem63 = real(buffer_read_string(buffer));          
            saveqitem63 = real(buffer_read_string(buffer));          
            
            saveitem64 = real(buffer_read_string(buffer));          
            saveqitem64 = real(buffer_read_string(buffer));          
            
            saveitem65 = real(buffer_read_string(buffer));          
            saveqitem65 = real(buffer_read_string(buffer));          
            
            saveitem66 = real(buffer_read_string(buffer));          
            saveqitem66 = real(buffer_read_string(buffer));          
            
            saveitem67 = real(buffer_read_string(buffer));          
            saveqitem67 = real(buffer_read_string(buffer));          
            
            saveitem68 = real(buffer_read_string(buffer));          
            saveqitem68 = real(buffer_read_string(buffer));          
            
            saveitem69 = real(buffer_read_string(buffer));          
            saveqitem69 = real(buffer_read_string(buffer));          
            
            saveitem70 = real(buffer_read_string(buffer));          
            saveqitem70 = real(buffer_read_string(buffer));          
            
            saveitem71 = real(buffer_read_string(buffer));          
            saveqitem71 = real(buffer_read_string(buffer));          
            
            saveitem72 = real(buffer_read_string(buffer));          
            saveqitem72 = real(buffer_read_string(buffer));          
            
            saveitem73 = real(buffer_read_string(buffer));          
            saveqitem73 = real(buffer_read_string(buffer));          
            
            saveitem74 = real(buffer_read_string(buffer));          
            saveqitem74 = real(buffer_read_string(buffer));          
            
            saveitem75 = real(buffer_read_string(buffer));          
            saveqitem75 = real(buffer_read_string(buffer));          
            
            saveitem76 = real(buffer_read_string(buffer));          
            saveqitem76 = real(buffer_read_string(buffer));          
            
            saveitem77 = real(buffer_read_string(buffer));          
            saveqitem77 = real(buffer_read_string(buffer));          
            
            saveitem78 = real(buffer_read_string(buffer));          
            saveqitem78 = real(buffer_read_string(buffer));          
            
            saveitem79 = real(buffer_read_string(buffer));          
            saveqitem79 = real(buffer_read_string(buffer)); 
            
            //Item Quantities for Item ID between 80 and 150
            saveqitem80 = real(buffer_read_string(buffer)); 
            saveqitem81 = real(buffer_read_string(buffer)); 
            saveqitem82 = real(buffer_read_string(buffer)); 
            saveqitem83 = real(buffer_read_string(buffer)); 
            saveqitem84 = real(buffer_read_string(buffer)); 
            saveqitem85 = real(buffer_read_string(buffer)); 
            saveqitem86 = real(buffer_read_string(buffer)); 
            saveqitem87 = real(buffer_read_string(buffer)); 
            saveqitem88 = real(buffer_read_string(buffer)); 
            saveqitem89 = real(buffer_read_string(buffer)); 
            saveqitem90 = real(buffer_read_string(buffer)); 
            saveqitem91 = real(buffer_read_string(buffer)); 
            saveqitem92 = real(buffer_read_string(buffer)); 
            saveqitem93 = real(buffer_read_string(buffer)); 
            saveqitem94 = real(buffer_read_string(buffer)); 
            saveqitem95 = real(buffer_read_string(buffer)); 
            saveqitem96 = real(buffer_read_string(buffer)); 
            saveqitem97 = real(buffer_read_string(buffer)); 
            saveqitem98 = real(buffer_read_string(buffer)); 
            saveqitem99 = real(buffer_read_string(buffer)); 
            saveqitem100 = real(buffer_read_string(buffer)); 
            saveqitem101 = real(buffer_read_string(buffer)); 
            saveqitem102 = real(buffer_read_string(buffer)); 
            saveqitem103 = real(buffer_read_string(buffer)); 
            saveqitem104 = real(buffer_read_string(buffer)); 
            saveqitem105 = real(buffer_read_string(buffer)); 
            saveqitem106 = real(buffer_read_string(buffer)); 
            saveqitem107 = real(buffer_read_string(buffer)); 
            saveqitem108 = real(buffer_read_string(buffer)); 
            saveqitem109 = real(buffer_read_string(buffer)); 
            saveqitem110 = real(buffer_read_string(buffer)); 
            saveqitem111 = real(buffer_read_string(buffer)); 
            saveqitem112 = real(buffer_read_string(buffer)); 
            saveqitem113 = real(buffer_read_string(buffer)); 
            saveqitem114 = real(buffer_read_string(buffer)); 
            saveqitem115 = real(buffer_read_string(buffer)); 
            saveqitem116 = real(buffer_read_string(buffer)); 
            saveqitem117 = real(buffer_read_string(buffer)); 
            saveqitem118 = real(buffer_read_string(buffer)); 
            saveqitem119 = real(buffer_read_string(buffer)); 
            saveqitem120 = real(buffer_read_string(buffer)); 
            saveqitem121 = real(buffer_read_string(buffer)); 
            saveqitem122 = real(buffer_read_string(buffer)); 
            saveqitem123 = real(buffer_read_string(buffer)); 
            saveqitem124 = real(buffer_read_string(buffer)); 
            saveqitem125 = real(buffer_read_string(buffer)); 
            saveqitem126 = real(buffer_read_string(buffer)); 
            saveqitem127 = real(buffer_read_string(buffer)); 
            saveqitem128 = real(buffer_read_string(buffer)); 
            saveqitem129 = real(buffer_read_string(buffer)); 
            saveqitem130 = real(buffer_read_string(buffer)); 
            saveqitem131 = real(buffer_read_string(buffer)); 
            saveqitem132 = real(buffer_read_string(buffer)); 
            saveqitem133 = real(buffer_read_string(buffer)); 
            saveqitem134 = real(buffer_read_string(buffer)); 
            saveqitem135 = real(buffer_read_string(buffer)); 
            saveqitem136 = real(buffer_read_string(buffer)); 
            saveqitem137 = real(buffer_read_string(buffer)); 
            saveqitem138 = real(buffer_read_string(buffer)); 
            saveqitem139 = real(buffer_read_string(buffer)); 
            saveqitem140 = real(buffer_read_string(buffer)); 
            saveqitem141 = real(buffer_read_string(buffer)); 
            saveqitem142 = real(buffer_read_string(buffer)); 
            saveqitem143 = real(buffer_read_string(buffer)); 
            saveqitem144 = real(buffer_read_string(buffer)); 
            saveqitem145 = real(buffer_read_string(buffer)); 
            saveqitem146 = real(buffer_read_string(buffer)); 
            saveqitem147 = real(buffer_read_string(buffer)); 
            saveqitem148 = real(buffer_read_string(buffer)); 
            saveqitem149 = real(buffer_read_string(buffer)); 

            //Equipment:
            slot_earring_ID     =real(buffer_read_string(buffer)); 
            slot_head_ID        =real(buffer_read_string(buffer)); 
            slot_shoulders_ID   =real(buffer_read_string(buffer)); 
            slot_top_ID         =real(buffer_read_string(buffer)); 
            slot_weapon_ID      =real(buffer_read_string(buffer)); 
            slot_gloves_ID      =real(buffer_read_string(buffer)); 
            slot_vambraces_ID   =real(buffer_read_string(buffer)); 
            slot_shield_ID      =real(buffer_read_string(buffer)); 
            slot_ring1_ID       =real(buffer_read_string(buffer)); 
            slot_ring2_ID       =real(buffer_read_string(buffer)); 
            slot_ring3_ID       =real(buffer_read_string(buffer)); 
            slot_ring4_ID       =real(buffer_read_string(buffer)); 
            slot_boots_ID       =real(buffer_read_string(buffer)); 
            slot_legs_ID        =real(buffer_read_string(buffer)); 
            
            //Variables still to be set via database:
            
            

            
            //connection set, clean buffer and destroy object -&gt; move to verifier
            buffer_destroy(buffer);
            setstats=1
            
        }
        if st=5 {
            show_message("Error, could not load account details! Please try again later");
            httprequest_destroy(httpdownload);
            httprequest = -1;
            game_end();
        }
        if st=4 or st=5 {
            httprequest_destroy(httpdownload);
            httprequest = -1;
        }
    
    }
    
}

if setstats=1
{
    //----------TRAINABLE STATS------------

    ownhealthpercent    =   (ownhealth/ownhealthtotal)*100
    ownsppercent        =   (ownsp/ownsptotal)*100
    
    
    //----------TRAINABLE/ADDITIONAL STATS------------
    

    tdmovespeed         =   6+0.2*agility
    pmovespeed          =   6+0.1*agility
    ownexppercent       =   (ownexp/ownexptotal)*100
    questpercent        =   (questscomplete/questmax)*100
    
    

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Autosave</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>autosave -=1

if autosave &lt;= 0 
{
    autosave = 120*30;
    instance_create(x,y,obj_Logout);
    saypc("Game has been autosaved.",c_yellow);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Rest</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if cheating=1
//{

scr_Shakescreen();
//}



if created=1 &amp;&amp; room != room_Initials
{
    scr_Levelsystem();


    if admin=1
    {
        scr_Cheater(); //&lt;--- delete when bringing out game!!
        if keyboard_check(vk_control)
        {
            if keyboard_check(vk_shift)
            {
                if keyboard_check(ord('C'))
                    {
                        if get_string("cheat=1 for cheats:","") = "cheat=1"
                            {cheating=1}
                    }
            }
        }
    //sound_volume(index,global.volume)
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if created=1 &amp;&amp; room != room_Initials
{

    visible=true
    image_speed=0.2
    
    //Calculating Playerstat Values
    ownhealthpercent    =   (ownhealth/ownhealthtotal)*100
    ownsppercent        =   (ownsp/ownsptotal)*100
    ownexppercent       =   (ownexp/ownexptotal)*100
    questpercent        =   (questscomplete/questmax)*100
    
    ownmindamage        =   round(0.8*(ownstrength*weapondamage))
    ownmaxdamage        =   round(1.2*(ownstrength*weapondamage))
    owndeltadamage      =   ownmaxdamage - ownmindamage
    
    //Movement Speed
    tdmovespeed         =   6+3*log10(1+agility)
    pmovespeed          =   6+3*log10(1+agility)
    
    
    
    //Limiting health and sp
    if ownhealth &gt; ownhealthtotal {ownhealth = ownhealthtotal}
    if ownsp &gt; ownsptotal {ownsp = ownsptotal}
    
    //ON DEATH SCRIPT
    if ownhealth &lt;= 0
    {
        ownhealth=ownhealthtotal
        room_goto(room_Town1);
        instance_create(x,y,obj_onDeath);
    }

    //Global values
    //Boss Respawn timers countdown
    if global.Boss1respawn&gt;0 {global.Boss1respawn-=1;}
    
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Help Popup
if keyboard_check_pressed(vk_f1) &amp;&amp; DrawHelp=0
{
    DrawHelp=1;
    global.pause=1;
}
else if keyboard_check_released(vk_f1) &amp;&amp; DrawHelp=1
{
    DrawHelp=0;
    if !instance_exists(obj_Chatbox){global.pause=0}
}

/*Change tutorial value to 1 when not in tutorial map anymore
if room=room_Town1 &amp;&amp; global.ComeFromTutorial=0
{
    global.ComeFromTutorial=1;
}

if room=room_Tutorial1 &amp;&amp; global.ComeFromTutorial=1
{
    room_goto(room_Town1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MUSIC SETTINGS -&gt;</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sound_global_volume(power(global.volume,0.3));

//global.volume^4


SS_SetSoundVolAll(10000*power(global.volume,0.3));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>receive incoming chats</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room !=room_Initials
{
    var s, a;
    
    socket_update_read(socket);
    //chatserver receive update
    while socket_read_message(socket, global.chatbuffer) {
        a = buffer_read_uint8(global.chatbuffer);
        switch(a) {
            
            //receive message
            case 1:
            saypc(buffer_read_string(global.chatbuffer),c_orange);
            break;
            
            default:
            saypc("&lt;unknown command " + string(a) + ", len=" + string(buffer_get_length(global.chatbuffer)) + "&gt;",c_yellow);
            
        }
    }
    
    if !chatconnected {chatreconnecttimer+=1;}

    
    //Chatserver status
    s = socket_get_state(socket);
    if s = 2 and !chatconnected {
        chatconnected = true;
        instance_create(x,y,obj_Multiplayer);
        saypc("You are now connected to the chatserver.",c_white);
    }
    if s = 4 {
        saypc("Connection to the chatserver terminated.",c_white);
        exit;
    }
    if s = 5 {
        if chatconnected {
            saypc("Connection with chatserver lost.",c_white);
        } else {
            if chatreconnecttimer &gt;= chatreconnecttime*30
            {
                saypc("Could not connect to chatserver.",c_white);
                chatreconnecttimer=0;
            }
        }
        exit;
    }
    

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room=room_Initials
{
    chatserver_connect();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if room != room_Initials &amp;&amp; created=0
{

    
    //Set GameStart location from player
    global.xx=room_width/2
    global.yy=(room_height/2)+150
    
    global.centermapx = view_xview[0]+500;
    global.centermapy = view_yview[0]+320;

    //global.volume=0.4 //ALREADY DEFINED BY OBJ_BTNCONTROLLER    
    volumeset=0
    volumeamount=50


    
    //Chat
    for(i=0; i&lt;=6; i+=1)
    {
        chatlog[i]="";
        chatcolor[i]=c_orange;
    }
    q=0
    saypc("Welcome to Rendonan!",c_aqua);
    saypc("Change skill selection with U/I",c_aqua);
    saypc("Jump with K",c_aqua);
    saypc("Talk/attack with J",c_aqua);
    saypc("Move with W,A,S,D",c_aqua);
    saypc("Type 'help' for help",c_aqua);
    saypc("More info on www.rendonan.com",c_aqua)
    

    
    
    
    /***************************************************
          Boss Respawns, download from database. (found in boss respawn objects)
    ***************************************************/

    
    
    /***************************************************
      PLAYER ARMOR
     ***************************************************/
     

    
    
    /***************************************************
      PLAYER STATS
     ***************************************************/
     
    //----------TRAINABLE STATS------------

    ownhealthpercent    =   (ownhealth/ownhealthtotal)*100
    ownsppercent        =   (ownsp/ownsptotal)*100

    
    
    
    
    //----------TRAINABLE/ADDITIONAL STATS------------
    

    tdmovespeed         =   6+0.2*agility
    pmovespeed          =   6+0.1*agility
    ownexppercent       =   (ownexp/ownexptotal)*100
    questpercent        =   (questscomplete/questmax)*100
    

     
    created=1     
}
 

if created=1
{


    /*if !instance_exists(obj_tdPlayer) &amp;&amp; (room != room_pTest1 &amp;&amp; room!= room_pIntro1) &amp;&amp; global.ComeFromTutorial=0
    {
        instance_create(global.xx,global.yy,obj_tdPlayer);
    }
    else if global.ComeFromTutorial=1
    {
        instance_create(obj_NPCgrampsTown1.x-global.xx,obj_NPCgrampsTown1.y-global.yy,obj_tdPlayer);
        global.ComeFromTutorial=2
    }
    else
    {
        instance_create(room_width/2,room_height/2,obj_tdPlayer);
    }
    
       
    if !instance_exists(obj_Skillbar)
    {
        instance_create(x,y,obj_Skillbar)
    } */
    
    if !instance_exists(obj_tdPlayer) &amp;&amp; (room != room_pTest1) &amp;&amp; global.ComeFromTutorial=2
    {
        instance_create(global.xx,global.yy,obj_tdPlayer);
    }
    else if global.ComeFromTutorial=1
    {
        instance_create(obj_NPCgrampsTown1.x-global.xx,obj_NPCgrampsTown1.y-global.yy,obj_tdPlayer);
        global.ComeFromTutorial=2;
    }
     
    if !instance_exists(obj_Skillbar)
    {
        instance_create(x,y,obj_Skillbar)
    }
       

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*

if created=0 &amp;&amp; room != room_Initials{

    created=1
    
    //Set GameStart location from player
    global.xx=room_width/2
    global.yy=(room_height/2)+150
    
    global.centermapx = view_xview[0]+500;
    global.centermapy = view_yview[0]+320;
    
    //Volume Status
    global.volume=0.5
    volumeset=0
    volumeamount=70
    
    //Chat
    for(i=0; i&lt;=6; i+=1)
    {
        chatlog[i]="";
        chatcolor[i]=c_orange;
    }
    q=0
    saypc("Welcome to Rendonan!",c_aqua);
    saypc("Change skill selection with U/I",c_aqua);
    saypc("Jump with K",c_aqua);
    saypc("Talk/attack with J",c_aqua);
    saypc("Move with W,A,S,D",c_aqua);
    saypc("Type 'help' for help",c_aqua);
    saypc("More info on www.rendonan.com",c_aqua)
    
    /*
    chatlog[0]="type 'help' for help";
    chatlog[1]="Move with W,A,S,D";
    chatlog[2]="Talk/attack with J";
    chatlog[3]="Jump with K";
    chatlog[4]="Change skill selection with U/I";
    chatlog[5]="Welcome to Rendonan!";
    */
    
    
    
    /***************************************************
          Boss Respawns, download from database. (found in boss respawn objects)
    ***************************************************
    //global.Boss1respawn=27000; //15 minutes boss respawn time
    
    
    /***************************************************
      PLAYER ARMOR
     ***************************************************
     
     //armor_top      =   0;
    
    
    /***************************************************
      PLAYER STATS
     ***************************************************
     
    //----------TRAINABLE STATS------------
    //Health
    //ownhealthtotal      =   100
    //ownhealth           =   ownhealthtotal
    ownhealthpercent    =   (ownhealth/ownhealthtotal)*100
    //s_hp                =   0
    
    //SP
    //ownsptotal          =   100
    //ownsp               =   ownsptotal
    ownsppercent        =   (ownsp/ownsptotal)*100
    //s_sp                =   0
    
    //Strength  =&gt; Affects damage
    //ownstrength         =   10
    //s_str               =   0
    
    //Range
    //attackrange         =   50
    //s_range             =   0
    
    //Agility =&gt; Affects movement speed
    //agility             =   0
    //s_ag                =   0
    
    //Defence =&gt; Affects damage taken
    //defence             =   0
    //s_def               =   0
    
    
    
    
    //----------TRAINABLE/ADDITIONAL STATS------------
    
    //Movementspeed
    tdmovespeed         =   6+0.2*agility
    pmovespeed          =   6+0.1*agility
    
    //Experience
    //ownexptotal         =   100
    //ownexp              =   0
    ownexppercent       =   (ownexp/ownexptotal)*100
    
    //Skillpoint
    //ownskillpoint       =   0
    //ownskillpointused   =   0
    
    
    //Statpoint
    //ownstatpoint        =   5
    //ownstatpointused    =   0
    
    //Level
    //ownlevel            =   1
    
    
    
    //Weapon Damagebonus
    //weapondamage        =   1
    
    
    
    //Damage
    //ownmindamage        =   round(0.6*(ownstrength*weapondamage))
    //ownmaxdamage        =   round(1.4*(ownstrength*weapondamage))
    //owndeltadamage      =   ownmaxdamage - ownmindamage
    //Damage              =   round(((0.6+random(0.4))*obj_tdPlayer.ownstrength)^(1+0.05*obj_tdPlayer.weapondamage))
    
    
    //Attackspeed
    //attackspeed         =   1
    
    //Chains
    //learnchain1         =   1
    
    
    
    //Money
    //money               =   0
    
    //Quests
    //questscomplete      =   0   //count how many quests have been completed
    //questmax            =   20  //total amount of quests avaiable
    questpercent        =   (questscomplete/questmax)*100
    
    
    //global.quest1reward =   0
    //global.quest2reward =   0
    //global.quest3reward =   0
    //global.quest4reward =   0
    //global.quest5reward =   0
    //global.quest6reward =   0
    //global.quest7reward =   0
    //global.quest8reward =   0
    
    
    /***************************************************
      PLAYER EQUIPMENT
     ***************************************************/
     //armor_top=0;
    
    
    /***************************************************
      PLAYER STATS
     ***************************************************
     
     
}
 
if created=1
{


if !instance_exists(obj_tdPlayer) &amp;&amp; (room != room_pTest1) &amp;&amp; global.ComeFromTutorial=0
   {
       instance_create(global.xx,global.yy,obj_tdPlayer);
   }
   
if !instance_exists(obj_Skillbar)
    {instance_create(x,y,obj_Skillbar)}
   
   else if global.ComeFromTutorial=1
   {
       instance_create(obj_NPCgrampsTown1.x-global.xx,obj_NPCgrampsTown1.y-global.yy,obj_tdPlayer);
       global.ComeFromTutorial=0;
   }
   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Music Control</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Game Music Mastering:
if room=room_Town1
{
    if !SS_IsSoundPlaying(global.sng_Town)
    {
        SS_SoundStopAll();
        SS_LoopSound(global.sng_Town);
    }
}

else if (room=room_Path1 || room=room_Path2 || room=room_Path3 || room=room_Path4 || room=room_Path5 || room=room_Path6)
{
    if !SS_IsSoundPlaying(global.sng_Path1)
    {
        SS_SoundStopAll();
        SS_LoopSound(global.sng_Path1);
    }
}

else if (room=room_Cave1)
{
    if !SS_IsSoundPlaying(global.sng_Boss)
    {
        SS_SoundStopAll();
        SS_LoopSound(global.sng_Boss);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>socket_destroy(socket);
buffer_destroy(global.chatbuffer);

SS_Unload();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_TutorialLinker)
{
    if obj_TutorialLinker.blackboxalpha&lt;=0
    {
        draw_sprite(spr_Cur,0,mouse_x,mouse_y);
    }
}
else
{
    draw_sprite(spr_Cur,0,mouse_x,mouse_y);
}


if DrawHelp=1
{
    draw_sprite(spr_Keymap,0,view_xview[0]+500,view_yview[0]+320);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if admin=1
{

    if keyboard_check(vk_space)
    {
        draw_set_color(c_navy);
        draw_set_halign(fa_center);
        draw_set_alpha(1);
        draw_set_font(ft_NPC);
        
        //VERTICAL
        draw_line(view_xview[0]+500,view_yview[0]+000,view_xview[0]+500,view_yview[0]+640);
        draw_text(view_xview[0]+500,view_yview[0]+000,"0");
        draw_text(view_xview[0]+500,view_yview[0]+050,"50");
        draw_text(view_xview[0]+500,view_yview[0]+100,"100");
        draw_text(view_xview[0]+500,view_yview[0]+150,"150");
        draw_text(view_xview[0]+500,view_yview[0]+200,"200");
        draw_text(view_xview[0]+500,view_yview[0]+250,"250");
        draw_text(view_xview[0]+500,view_yview[0]+300,"300");
        draw_text(view_xview[0]+500,view_yview[0]+350,"350");
        draw_text(view_xview[0]+500,view_yview[0]+400,"400");
        draw_text(view_xview[0]+500,view_yview[0]+450,"450");
        draw_text(view_xview[0]+500,view_yview[0]+500,"500");
        draw_text(view_xview[0]+500,view_yview[0]+550,"550");
        draw_text(view_xview[0]+500,view_yview[0]+600,"600");
        draw_text(view_xview[0]+500,view_yview[0]+650,"650");
        
        //HORIZONTAL
        draw_line(view_xview[0]+000,view_yview[0]+320,view_xview[0]+1000,view_yview[0]+320);
        draw_text(view_xview[0]+000,view_yview[0]+320,"0");
        draw_text(view_xview[0]+050,view_yview[0]+320,"50");
        draw_text(view_xview[0]+100,view_yview[0]+320,"100");
        draw_text(view_xview[0]+150,view_yview[0]+320,"150");
        draw_text(view_xview[0]+200,view_yview[0]+320,"200");
        draw_text(view_xview[0]+250,view_yview[0]+320,"250");
        draw_text(view_xview[0]+300,view_yview[0]+320,"300");
        draw_text(view_xview[0]+350,view_yview[0]+320,"350");
        draw_text(view_xview[0]+400,view_yview[0]+320,"400");
        draw_text(view_xview[0]+450,view_yview[0]+320,"450");
        draw_text(view_xview[0]+500,view_yview[0]+320,"500");
        draw_text(view_xview[0]+550,view_yview[0]+320,"550");
        draw_text(view_xview[0]+600,view_yview[0]+320,"600");
        draw_text(view_xview[0]+650,view_yview[0]+320,"650");
        draw_text(view_xview[0]+700,view_yview[0]+320,"700");
        draw_text(view_xview[0]+750,view_yview[0]+320,"750");
        draw_text(view_xview[0]+800,view_yview[0]+320,"800");
        draw_text(view_xview[0]+850,view_yview[0]+320,"850");
        draw_text(view_xview[0]+900,view_yview[0]+320,"900");
        draw_text(view_xview[0]+950,view_yview[0]+320,"950");
        
        //draw vertical line on mouse
        draw_line(mouse_x,view_yview[0],mouse_x,view_yview[0]+680)
        //draw horizontal line
        draw_line(view_xview[0],mouse_y,view_xview[0]+1000,mouse_y)
        //draw position text
        draw_set_color(c_fuchsia);
        draw_text(mouse_x+10,mouse_y+10,string("(")+string(mouse_x-view_xview[0])+string(";")+string(mouse_y-view_yview[0])+string(")"));
        draw_set_color(c_black);
        draw_text(view_xview[0]+40,view_yview[0]+10,string("(")+string(mouse_x-view_xview[0])+string(";")+string(mouse_y-view_yview[0])+string(")"));
        draw_set_halign(fa_left);
        draw_text(view_xview[0]+40,view_yview[0]+22,"This game (Rendonan obviously) has been Created by Teun Kokke");
        
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var cmd, cmdtext;


//type/talk



if obj_StatsBG.up=1
{
    if room!=room_pIntro1
    {
        draw_sprite_ext(spr_Chatcontainer,0,view_xview[0]+16,view_yview[0]+320,1.2,1,0,c_white,0.7);
        
        //make the | character flash when typing
        var line;
        q+=0.2;
        if sin(q) &gt;= 0 {line="|"} else {line=""};
    
        //initiate typing
        if typing=0 &amp;&amp; keyboard_check_pressed(vk_enter)
        {
            keyboard_string="";
            typing=1
        }
        
        else if typing=1 &amp;&amp; keyboard_check_pressed(vk_enter) &amp;&amp; text != ""
        {           
            //chatting (sending)
            if chatconnected
            {
                a = string_pos(" ",text);
                if a = 0 {
                    cmd = "";
                } else {
                    cmd = string_copy(text, 1, a - 1); //cmd is the command that affects the argument &lt;cmd&gt; &lt;cmdtext&gt;
                    cmdtext = string_copy(text, a + 1, string_length(text)-a); //cmdtext is the &lt;argument&gt;
                }
                
                //Chat command
                //admin commandss
                if cmd = "/returnall" || cmd = "/bossall" || cmd = "/noticeall"
                {
                    if admin=1
                    {
                        buffer_clear(global.chatbuffer);
                        buffer_write_uint8(global.chatbuffer, 1);
                        buffer_write_string(global.chatbuffer, string(cmd)+string(" ")+string(cmdtext));
                        socket_write_message(socket, global.chatbuffer);
                    }
                    else
                    {
                        saypc("this command is for admin only",c_white);
                    }
                    obj_Controller.text="";
                    obj_Controller.keyboard_string="";
                    obj_Controller.typing=0;
                }
                else //if not admin
                {
                    if cmd="/return"
                    {
                        obj_tdPlayer.x=room_width/2;
                        obj_tdPlayer.y=room_width/2+200;
                        room_goto(room_Town1);
                    }
                    else //normal chat without commands
                    {
                        buffer_clear(global.chatbuffer);
                        buffer_write_uint8(global.chatbuffer, 1);
                        buffer_write_string(global.chatbuffer,text);
                        socket_write_message(socket, global.chatbuffer);
                    }
                    obj_Controller.text="";
                    obj_Controller.keyboard_string="";
                    obj_Controller.typing=0;
                }
            } else { 
                if text != "/return"
                {say(text,c_orange);}
                else
                {
                    obj_tdPlayer.x=room_width/2;
                    obj_tdPlayer.y=room_width/2+200;
                    room_goto(room_Town1);
                }
            }
            
        }
        
        else if typing=1 &amp;&amp; keyboard_check_pressed(vk_enter) &amp;&amp; text == ""
        {
            typing=0
        }
        
        if typing=1
        {
            draw_set_font(ft_Chatbox);
            draw_set_color(c_black);
            draw_set_halign(fa_left);
            draw_set_alpha(0.5);
            draw_rectangle(view_xview[0]+18,view_yview[0]+400,view_xview[0]+198,view_yview[0]+400+2+string_height("&gt; "+text+line),0)
            //draw_roundrect(view_xview[0]+18,view_yview[0]+400,view_xview[0]+20+5+string_width("&gt; "+string(text)+"|"),view_yview[0]+400+2+string_height("&gt; "+text+"|"),0);
            draw_set_color(c_orange);
            //draw_roundrect(view_xview[0]+18,view_yview[0]+400,view_xview[0]+20+5+string_width("&gt; "+string(text)+"|"),view_yview[0]+400+2+string_height("&gt; "+text+"|"),1);
            draw_line(view_xview[0]+18,view_yview[0]+402,view_xview[0]+198,view_yview[0]+402);
            draw_line(view_xview[0]+18,view_yview[0]+400+string_height("&gt; "+text+line),view_xview[0]+198,view_yview[0]+400+string_height("&gt; "+text+line));
            if string_width(keyboard_string) &lt;= 260
            {
                text = keyboard_string;
            }
            draw_set_color(c_orange);
            draw_set_alpha(1);
            draw_text(view_xview[0]+20,view_yview[0]+400,"&gt; "+text+line);
        }
        
        
        
        for(i=0; i&lt;=12; i+=1)
        {
            draw_set_font(ft_Chatbox);
            draw_set_color(c_black)
            draw_set_halign(fa_left);
            draw_set_alpha(0.7-0.06*i);
            //if chatlog[i]!="" {draw_rectangle(view_xview[0]+18,view_yview[0]+380-10*i,view_xview[0]+20+2+string_width(chatlog[i]),view_yview[0]+380+10-10*i,0);}
            draw_set_color(c_white);
            //draw_line(view_xview[0]+18,view_yview[0]+380-10*i,view_xview[0]+20+2+string_width(chatlog[i]),view_yview[0]+380-10*i);
            draw_set_alpha(0.1);
            draw_line(view_xview[0]+18,view_yview[0]+380-10*i,view_xview[0]+258,view_yview[0]+380-10*i);
            draw_set_alpha(0.9)
            draw_set_color(c_orange)
            //draw_set_alpha(1-0.06*i);
            draw_set_color(chatcolor[i]);
            draw_text(view_xview[0]+20,view_yview[0]+378-10*i,chatlog[i]);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room != room_pIntro1
{
    //edge sliders
    draw_sprite_ext(spr_Slider,0,(view_xview[0]+1000)-(mouse_x-view_xview[0]),view_yview[0],1,1,0,c_white,1);
    draw_sprite_ext(spr_Slider,0,(view_xview[0]+1000)-(mouse_x-view_xview[0]),view_yview[0]+640,1,1,180,c_white,1);
    
    draw_sprite_ext(spr_Slider,0,view_xview[0],(view_yview[0]+640)-(mouse_y-view_yview[0]),1,1,90,c_white,1);
    draw_sprite_ext(spr_Slider,0,view_xview[0]+1000,(view_yview[0]+640)-(mouse_y-view_yview[0]),1,1,270,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

    


if levelupsign=1
{
    //add up motion counter
    levelupsigntime+=1
    
    
    //Level Up Text
    if levelupsigntime&gt;=0 &amp;&amp; levelupsigntime &lt;= 10
    {
        if ownlevel=2
        {
            storymode("Level Up! You can now add stat points (Press 'C')",c_orange,ft_menu,levelupsigntime/10,600);
        }
        else if ownlevel =3
        {
            storymode("Level Up! You can now use melee skills (Press 'V')",c_orange,ft_menu,levelupsigntime/10,600);
        }
        else if ownlevel =4
        {
            storymode("Level Up! Magic learned: Meteor Strike.",c_orange,ft_menu,levelupsigntime/10,600);
        }  
        else if ownlevel = 6
        {
            storymode("Level Up! You have learned a new melee skill (Press 'V')",c_orange,ft_menu,levelupsigntime/10,600);
        }
        else
        {
            storymode("Level Up!",c_orange,ft_menu,levelupsigntime/10,600);
        }
    }
    else if levelupsigntime &gt; 10 &amp;&amp; levelupsigntime &lt;= 60
    {
        if ownlevel=2
        {
            storymode("Level Up! You can now add stat points (Press 'C')",c_orange,ft_menu,levelupsigntime/10,600);
        }
        else if ownlevel =3
        {
            storymode("Level Up! You can now use melee skills (Press 'V')",c_orange,ft_menu,levelupsigntime/10,600);
        }
        else if ownlevel =4
        {
            storymode("Level Up! Magic learned: Meteor Strike.",c_orange,ft_menu,levelupsigntime/10,600);
        }  
        else if ownlevel =6
        {
            storymode("Level Up! You have learned a new melee skill (Press 'V')",c_orange,ft_menu,levelupsigntime/10,600);
        }        
        else
        {
            storymode("Level Up!",c_orange,ft_menu,levelupsigntime/10,600);
        }
    }
    else if levelupsigntime &gt;60 &amp;&amp; levelupsigntime &lt;= 80
    {
        if ownlevel=2
        {
            storymode("Level Up! You can now add stat points (Press 'C')",c_orange,ft_menu,levelupsigntime/10,600);
        }
        else if ownlevel =3
        {
            storymode("Level Up! You can now use melee skills (Press 'V')",c_orange,ft_menu,levelupsigntime/10,600);
        }
        else if ownlevel =4
        {
            storymode("Level Up! Magic learned: Meteor Strike.",c_orange,ft_menu,levelupsigntime/10,600);
        }    
        else if ownlevel =6
        {
            storymode("Level Up! You have learned a new melee skill (Press 'V')",c_orange,ft_menu,levelupsigntime/10,600);
        }        
        else
        {
            storymode("Level Up!",c_orange,ft_menu,levelupsigntime/10,600);
        }
    }
    else if levelupsigntime &gt;80
    {
        levelupsign=0;
        levelupsigntime=0;
    }

    draw_set_color(c_yellow);
    //Sign
    if instance_exists(obj_tdPlayer)
    {
        if levelupsigntime&gt;=0 &amp;&amp; levelupsigntime &lt;= 5
        {
            draw_set_alpha(1)
            draw_line(obj_tdPlayer.x,obj_tdPlayer.y,obj_tdPlayer.x,view_yview[0])
            draw_set_alpha(1)
        }
        if levelupsigntime&gt;=5 &amp;&amp; levelupsigntime &lt;= 22
        {
            draw_set_alpha(0.9)
            draw_line(obj_tdPlayer.x-3,obj_tdPlayer.y,obj_tdPlayer.x-3,view_yview[0])
            draw_line(obj_tdPlayer.x+3,obj_tdPlayer.y,obj_tdPlayer.x+3,view_yview[0])
            draw_set_alpha(1)
        }
        if levelupsigntime&gt;=10 &amp;&amp; levelupsigntime &lt;= 15
        {
            draw_set_alpha(0.8)
            draw_line(obj_tdPlayer.x-6,obj_tdPlayer.y+2,obj_tdPlayer.x-6,view_yview[0])
            draw_line(obj_tdPlayer.x+6,obj_tdPlayer.y+2,obj_tdPlayer.x+6,view_yview[0])
            draw_set_alpha(1)
        }
        if levelupsigntime&gt;=15 &amp;&amp; levelupsigntime &lt;= 20
        {
            draw_set_alpha(0.7)
            draw_line(obj_tdPlayer.x-9,obj_tdPlayer.y+4,obj_tdPlayer.x-9,view_yview[0])
            draw_line(obj_tdPlayer.x+9,obj_tdPlayer.y+4,obj_tdPlayer.x+9,view_yview[0])
            draw_set_alpha(1)
        }
        if levelupsigntime&gt;=20 &amp;&amp; levelupsigntime &lt;= 25
        {
            draw_set_alpha(0.55)
            draw_line(obj_tdPlayer.x-11,obj_tdPlayer.y+6,obj_tdPlayer.x-11,view_yview[0])
            draw_line(obj_tdPlayer.x+11,obj_tdPlayer.y+6,obj_tdPlayer.x+11,view_yview[0])
            draw_set_alpha(1)
        }
        if levelupsigntime&gt;=25 &amp;&amp; levelupsigntime &lt;= 30
        {
            draw_set_alpha(0.4)
            draw_line(obj_tdPlayer.x-13,obj_tdPlayer.y+8,obj_tdPlayer.x-13,view_yview[0])
            draw_line(obj_tdPlayer.x+13,obj_tdPlayer.y+8,obj_tdPlayer.x+13,view_yview[0])
            draw_set_alpha(1)
        }
    }
    
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var yy;

//draw_set_font(font_normal);
//draw_set_halign(fa_left);
//draw_set_valign(fa_middle);

draw_set_color(c_black);
for(i = 0; i&lt;global.chatlines; i += 1) {
    draw_text(5, i*20+10, global.chatline[i]);
}

draw_set_color(c_black);
draw_text(5, room_height-10, username+" &gt; "+keyboard_string+"|");


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>notice from admin</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if notice=1
{
    draw_set_font(ft_Notice)
    draw_set_halign(fa_center)
    
    draw_set_alpha(0.6);
    draw_set_color(c_black)
    draw_roundrect(view_xview[0]+500-5-0.5*string_width(noticemsg),view_yview[0]+320-102,view_xview[0]+500+5+0.5*string_width(noticemsg),view_yview[0]+320-98+string_height(noticemsg),0)
    
    if noticetimer &lt;100
    {
        draw_set_alpha(0.01*noticetimer)    
    }
    if noticetimer &gt;= 100 &amp;&amp; noticetimer &lt;= 260
    {
        draw_set_alpha(1)
    }
    if noticetimer &gt;260
    {
        draw_set_alpha(0.01*(360-noticetimer))
    }
    draw_set_color(c_yellow)
    draw_text(view_xview[0]+500,view_yview[0]+320-100,noticemsg);
    
    noticetimer+=1
    draw_set_alpha(1)
    draw_set_halign(fa_left)
}

if noticetimer &gt;= 360
{
    notice=0;
    noticetimer=0;
    noticemsg="";
}

//if keyboard_check_pressed(vk_space) {notice=1}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
