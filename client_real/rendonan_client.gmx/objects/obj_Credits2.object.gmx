<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer=0         
step=0;

screenplay=0;
counting=0;

textduration=3*30
textinterval=1*30

regulatealpha=0;
alpha=0;

blackboxalpha=0;

/*
if SS_IsSoundPlaying(global.sng_Menu)
{
    SS_StopSound(global.sng_Menu)
}
SS_LoopSound(global.sng_Intro);
*/ 
   
chat=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//SS_StopSound(global.sng_Intro);

if room!=MainMenu
{
    room_goto(MainMenu);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

draw_set_color(c_white)
draw_set_alpha(1)
draw_set_font(ft_Intro2);
draw_set_halign(fa_left)
draw_set_valign(fa_top);
draw_text(view_xview[0],view_yview[0]+600,"Rendonan#Visit: www.rendonan.com#Press &lt;Escape&gt; to return");

if keyboard_check_pressed(vk_escape)
{
    step=4
}

if room=MainMenu
{
    if step=0
    {   
        blackboxalpha+=0.02
        draw_set_color(c_black);
        draw_set_alpha(blackboxalpha);
        draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+1000,view_yview[0]+640,0);
        
        if blackboxalpha&gt;=1
        {
            blackboxalpha=1
            room_goto(room_pIntro1)
            step=1
            screenplay=1
        }
    }
}

if room=room_pIntro1
{
    if blackboxalpha&lt;1
    {
        draw_grain(view_xview[0],view_yview[0],view_xview[0]+1000,view_yview[0]+540,c_white,1,0.6,1,60);
        draw_grain(view_xview[0],view_yview[0],view_xview[0]+1000,view_yview[0]+540,c_white,1,0.6,1,60);
        draw_grain(view_xview[0],view_yview[0],view_xview[0]+1000,view_yview[0]+540,c_white,1,0.6,1,60);
        draw_grain(view_xview[0],view_yview[0],view_xview[0]+1000,view_yview[0]+540,c_white,1,0.6,1,60);
        draw_grain(view_xview[0],view_yview[0],view_xview[0]+1000,view_yview[0]+540,c_white,1,0.6,1,60);
    }
}


//Screenplay
//argument0=string content;
//argument1=string color;
//argument2=string font;
//argument3=alpha
//argument4=break after width in pixels (600 suggested)

//alpha regulator
if regulatealpha=1
{
    counting+=1
    
    if counting &lt;= 30
    {
        alpha+=0.03 //about 1 second to fade up
    }

    if textduration-counting&lt;=30
    {
        alpha-=0.03
    }
    
    if textduration-counting &lt;= 0
    {
        //reset action
        regulatealpha=0;
        alpha=0;
        counting=0;
    }
    
    if alpha&gt;=1 {alpha=1}
    if alpha&lt;=0 {alpha=0}
    
}

if screenplay=1 &amp;&amp; step=1
{
    //count up event timer
    timer+=1
    
    //draw black background
    draw_set_color(c_black);
    draw_set_alpha(blackboxalpha);
    draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+1000,view_yview[0]+640,0);
    
    if timer&gt;1*textinterval+0*textduration &amp;&amp; timer &lt;= 1*textinterval+1*textduration
    {
        regulatealpha=1;
        storymode("Credits",c_white,ft_menu,alpha,600);
    }
    
    if timer&gt;2*textinterval+1*textduration
    {
        blackboxalpha-=0.01
    }
    
    if blackboxalpha&lt;=0
    {
        screenplay=0;
        step=2;
        timer=0;
    }
    
}

text[ 0 ] = "Rendonan" ; 
text[ 1 ] = "" ; 
text[ 2 ] = "Created By:" ; 
text[ 3 ] = "Game Director: Teun Kokke" ;
text[ 4 ] = "Game Programming: Teun Kokke" ;
text[ 5 ] = "Game Designer: Teun Kokke";
text[ 6 ] = "Story Creator: Teun Kokke" ;
text[ 7 ] = "Music/Theme by: Teun Kokke" ;
text[ 8 ] = "Special Effects by: Teun Kokke" ;
text[ 9 ] = "Bugfixing: Spela Podjed &amp; Teun Kokke (fix S)";
text[ 10 ] = "Inventory: Spela Podjed &amp; Teun Kokke (fix S)";
text[ 11 ] = "";
text[ 12 ] = "Thanks for Playing!";
text[ 13 ] = "Website: www.rendonan.com";

if step=2
{
    timer+=1
    
    if timer&gt;1*textinterval+0*textduration &amp;&amp; timer &lt;= 1*textinterval+1*textduration
    {
        regulatealpha=1;
        storymode("Rendonan",c_white,ft_menu,alpha,600);
    }
    
    if timer&gt;2*textinterval+1*textduration &amp;&amp; timer &lt;= 2*textinterval+2*textduration
    {
        regulatealpha=1;
        storymode("Created by#Teun Kokke",c_white,ft_menu,alpha,600);
    }
    
    if timer&gt;3*textinterval+2*textduration &amp;&amp; timer &lt;= 3*textinterval+3*textduration
    {
        regulatealpha=1;
        storymode("Designed by#Teun Kokke",c_white,ft_menu,alpha,600);
    }
    
    if timer&gt;4*textinterval+3*textduration &amp;&amp; timer &lt;= 4*textinterval+4*textduration
    {
        regulatealpha=1;
        storymode("Programmed by#Teun Kokke",c_white,ft_menu,alpha,600);
    }
    
    if timer&gt;5*textinterval+4*textduration &amp;&amp; timer &lt;= 5*textinterval+5*textduration
    {
        regulatealpha=1;
        storymode("Story by#Teun Kokke",c_white,ft_menu,alpha,600);
    }
    
    if timer&gt;6*textinterval+5*textduration &amp;&amp; timer &lt;= 6*textinterval+6*textduration
    {
        regulatealpha=1;
        storymode("Music by#Teun Kokke",c_white,ft_menu,alpha,600);
    }
    
    if timer&gt;7*textinterval+6*textduration &amp;&amp; timer &lt;= 7*textinterval+7*textduration
    {
        regulatealpha=1;
        storymode("Special Effects by#Teun Kokke",c_white,ft_menu,alpha,600);
    }
    
    if timer&gt;8*textinterval+7*textduration &amp;&amp; timer &lt;= 8*textinterval+8*textduration
    {
        regulatealpha=1;
        storymode("Bugfixing by#Spela Podjed#Teun Kokke",c_white,ft_menu,alpha,600);
    }
    
    if timer&gt;9*textinterval+8*textduration &amp;&amp; timer &lt;= 9*textinterval+9*textduration
    {
        regulatealpha=1;
        storymode("Inventory System by#Spela Podjed#Teun Kokke",c_white,ft_menu,alpha,600);
    }
    
    if timer&gt;10*textinterval+9*textduration
    {
        timer=0;
        step=3;
    }
    
}

if step=3
{
    blackboxalpha+=0.01
    //draw black background
    draw_set_color(c_black);
    draw_set_alpha(blackboxalpha);
    draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+1000,view_yview[0]+640,0);
    
    if blackboxalpha&gt;=1
    {
        blackboxalpha=1
        step=4
    }

}

if step=4
{
    //count up event timer
    timer+=1
    
    //draw black background
    draw_set_color(c_black);
    draw_set_alpha(blackboxalpha);
    draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+1000,view_yview[0]+640,0);
    
    if timer&gt;1*textinterval+0*textduration &amp;&amp; timer &lt;= 1*textinterval+1*textduration
    {
        regulatealpha=1;
        storymode("Thanks for Playing!",c_white,ft_menu,alpha,600);
    }
    
    if timer&gt;2*textinterval+1*textduration &amp;&amp; timer &lt;= 2*textinterval+2*textduration
    {
        regulatealpha=1;
        storymode("Rendonan",c_orange,ft_menu,alpha,600);
    }
    
    if timer&gt;3*textinterval+2*textduration
    {
        timer=0;
        step=5;
        room_goto(MainMenu);
    }
}

if step=5
{
    blackboxalpha-=0.01
    //draw black background
    draw_set_color(c_black);
    draw_set_alpha(blackboxalpha);
    draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+1000,view_yview[0]+640,0);
    
    if blackboxalpha&lt;=0
    {
        blackboxalpha=0
        step=6
    }

}

if step=6
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
