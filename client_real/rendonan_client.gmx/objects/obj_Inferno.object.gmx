<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=mouse_x
y=mouse_y
xx=x;
yy=y;
radius=100;
time=200;
rot=-radius;

flames=10; //keep this even, amount of flames per ring
clouds=14;


//Multiple flame spots
for (i=0; i&lt;flames; i+=1)
{
    scr_inferno_init(i);
    xxx[i] = xx+radius*cos(i*20);
    yyy[i] = yy+radius*sin(i*20);
    
    //xx[i] = irandom_range(xx-radius,xx+radius)
    //yy[i] = irandom_range(yy-radius,yy+radius)
    //xx[i] = xx-radius+random(2*radius)
    //yy[i] = yy-radius+random(2*radius)
}
for (i=0; i&lt;flames; i+=1)
{
    scr_inferno_init(i+flames);
    xxx[i+flames] = xx+radius*cos(i*20+10);
    yyy[i+flames] = yy+radius*sin(i*20+10);
    
    //xx[i] = irandom_range(xx-radius,xx+radius)
    //yy[i] = irandom_range(yy-radius,yy+radius)
    //xx[i] = xx-radius+random(2*radius)
    //yy[i] = yy-radius+random(2*radius)
}
//multiple cloud spots
for (i=0; i&lt;clouds; i+=1)
{
    cloudx[i] = irandom_range(xx-radius,xx+radius)
    cloudy[i] = irandom_range(yy-radius,yy+radius)
    xdiff[i] = round(irandom_range(-2,2));
    ydiff[i] = round(irandom_range(-2,2));
}

atkrange = 40;
atkdamage = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//part_emitter_destroy(infernops,infernope);

for (i=0; i&lt;2*flames; i+=1)
{
    part_emitter_destroy(infernops,infernope[i]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//part_emitter_region(infernops,infernope,x-10,x+10,y-5,y+5,ps_shape_ellipse,ps_distr_linear);

//Multiple flame spots
for (i=0; i&lt;flames; i+=1)
{
    scr_inferno_init(i);
    xxx[i] = xx+(radius+rot)*cos(i*20+20*rot);
    yyy[i] = yy+(radius+rot)*sin(i*20+20*rot);
    
    //xx[i] = irandom_range(xx-radius,xx+radius)
    //yy[i] = irandom_range(yy-radius,yy+radius)
    //xx[i] = xx-radius+random(2*radius)
    //yy[i] = yy-radius+random(2*radius)
}


//multiple flame spots
for (i=0; i&lt;flames; i+=1)
{
    part_emitter_region(infernops,infernope[i],xxx[i]-15,xxx[i]+15,yyy[i],yyy[i]+1,ps_shape_ellipse,ps_distr_linear);
    part_emitter_burst(infernops,infernope[i],infernopt,6);
}
//multiple flame spots
for (i=0; i&lt;flames; i+=1)
{
    part_emitter_region(infernops,infernope[i+flames],xxx[i+flames]-15,xxx[i+flames]+15,yyy[i+flames],yyy[i+flames]+1,ps_shape_ellipse,ps_distr_linear);
    part_emitter_burst(infernops,infernope[i+flames],infernopt,1);
}

//part_emitter_region(infernops,infernope,x-1,x+1,y-1,y+1,ps_shape_ellipse,ps_distr_linear);

if rot &lt; 60 {rot+=6;}

if rot &gt;= 60
{
    rot=60;
}

time-=1
if time&lt;=0
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(parent_monster)
{
    with (parent_monster)
    {
        if distance_to_object(other) &lt;= other.atkrange
        {
            hp-=other.atkdamage;
            var a;
            a = instance_create(x,y,obj_MageHit)
            a.dmg = other.atkdamage;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if time &gt; 20 {r = random(0.2)-random(0.2);}
else {r+=0.1}

if time &gt; 30 {alpha=1}
else {alpha-=(1/30)}

//draw floor
draw_set_blend_mode(bm_normal)
draw_sprite_ext(spr_Inferno,0,xx,yy,2,2,0,c_white,alpha);

draw_set_blend_mode(bm_add);
//draw wiggle effect
draw_sprite_ext(spr_Effect,0,xx,yy,(1-r)+1,(1-r)+1,rot,c_yellow,0.5*alpha);
draw_sprite_ext(spr_Effect,0,xx,yy,(1-r)+1,(1-r)+1,-2*rot,c_red,0.2*alpha);
draw_set_blend_mode(bm_normal);

draw_set_color(c_white)
draw_line(x,y,xx,yy)
draw_set_color(c_black)


//draw clouds
for (i=0; i&lt;clouds; i+=1)
{
    cloudx[i] += xdiff[i];
    cloudy[i] += ydiff[i];
    draw_sprite_ext(spr_Smoke,0,cloudx[i],cloudy[i],1,1,0,c_white,alpha)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
