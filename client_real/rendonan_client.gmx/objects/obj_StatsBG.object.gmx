<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_StatsBG</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>centerx=(view_xview[0]+500);
centery=(view_yview[0]+590);

x=centerx
y=centery

//down = visible
//up = hidden
godown=0
down=0
goup=0
up=1

rotation=90
hheight=60
vheight=60

drawalpha=10
mousein=0

displayatkrange=0

flashalpha=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if obj_Menuinfo.btnchar=0
//{
//part_type_destroy(emitter1);
//part_system_destroy(emitter1);
//instance_destroy();
//}


if godown=1
{
//going down, adapt rotation
rotation-=3
//rotation adaption completed
if rotation &lt;= 0 {rotation=0;slide_fx(0); }//Can add sound Effect #1;; should be same moment as vheight &lt;=0 (see next step)
vheight-=2
if vheight &lt;=0 {vheight=0;slide_fx(0); }//Can add sound Effect #1;; should be same moment as hheight &gt;= 45 (see next step)

//hheight adaption Part 1
if hheight &gt;= 15 {hheight-=1.5;slide_fx(0); }//Can add sound Effect #1 [moving]

//hheight adaption Part 2
if hheight &lt; 15 &amp;&amp; hheight &gt;0 {hheight-=0.8;slide_fx(0); }//Can add sound Effect #2 [moving]

//hheight adaption completed
if hheight &lt;= 0 {hheight=0; godown=0; down=1;slide_fx(1); }//Can add sound Effect #3 [completed]
}


//Bugfix Set up and down to 0 when in movement
if goup=1 || godown=1
{up=0;down=0}



if goup=1
{
//hheight return adaption Part 1
if hheight &lt; 15 &amp;&amp; hheight &gt;=0 {hheight+=0.8;slide_fx(0); }//Can add sound Effect #2 [moving]

//hheight return adaption Part 2
if hheight &gt;=15 {hheight+=1.5; rotation+=3; vheight+=2;slide_fx(0); }//Can add sound Effect #1 [moving]
if rotation &gt;= 90 {rotation=90}
if vheight &gt;= 60 {vheight=60}
if hheight &gt;= 60 {hheight=60;goup=0;up=1;slide_fx(1); }//Can add sound Effect #3 [completed]
}

if down=1
{
    //if mouse hovers over stats {give more clarity to read}
    if mouse_enter_rectangle(view_xview[0]+35,view_yview[0]+70,view_xview[0]+295,view_yview[0]+230)
    //if (mouse_x &gt;= view_xview[0]+50 &amp;&amp; mouse_x &lt;= view_xview[0]+220 &amp;&amp; mouse_y &gt;= view_yview[0]+40 &amp;&amp; mouse_y &lt;= view_yview[0]+172)
    //{statsonhover=1} else {statsonhover=0}
    {
        if drawalpha &gt;7.2 {drawalpha-=0.1}
        if drawalpha &lt;=7.2 {drawalpha=7.2}
        displayatkrange=1
    }
    else
    {
        if drawalpha &lt;10{drawalpha+=0.1}
        if drawalpha &gt;=10 {drawalpha=10}
        displayatkrange=0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,view_xview[0]+260-(2.5*hheight),view_yview[0]+550+vheight,1+(rotation/117),1+(rotation/117),rotation,c_white,1);

if down=1
{
//Draw Player Stats
//Drawing Box
draw_set_font(ft_popup1)
draw_set_color(c_white)
draw_set_alpha(1-(drawalpha/12))
draw_set_alpha(1)
//draw_rectangle(view_xview[0]+25,view_yview[0]+70,view_xview[0]+290,view_yview[0]+233,0)
draw_set_color(c_white)
//Border Lines
draw_set_alpha(0.6)
//draw_line(view_xview[0]+150,view_yview[0]+070,view_xview[0]+150,view_yview[0]+238)  //halfway top - halfway bottom





//draw Level
//draw_set_alpha(1-(drawalpha/40))
draw_set_alpha(1)

draw_set_halign(fa_left);//:
draw_text(view_xview[0]+030,view_yview[0]+70,string("Level: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+033+string_width("Level: "),view_yview[0]+70,string(obj_Controller.ownlevel));

//Draw Experience
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+030,view_yview[0]+82,string("Exp: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+033+string_width("Exp: "),view_yview[0]+82,string(obj_Controller.ownexp)+string("/")+string(obj_Controller.ownexptotal)+string(" (")+string(obj_Controller.ownexppercent)+string("%)"));

//Draw Atk speed
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+030,view_yview[0]+94,string("Atk speed: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+033+string_width("Atk speed: "),view_yview[0]+94,obj_Controller.attackspeed);

//Draw Mov speed
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+030,view_yview[0]+106,string("Mov speed: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+033+string_width("Mov speed: "),view_yview[0]+106,string(round(obj_Controller.tdmovespeed))+string(" (")+string(round(obj_Controller.pmovespeed))+string(")"));

//Draw Damage
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+030,view_yview[0]+118,string("Damage: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+033+string_width("Damage: "),view_yview[0]+118,string(obj_Controller.ownmindamage)+string(" - ")+string(obj_Controller.ownmaxdamage));

//Skip

//Skip

//Draw Skills
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+030,view_yview[0]+142,string("Skills: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+033+string_width("Skills: "),view_yview[0]+142,string(obj_Controller.ownskillpoint)+string(" | ")+string(obj_Controller.ownskillpointused));

//Draw HP
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+030,view_yview[0]+154,string("HP: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+033+string_width("HP: "),view_yview[0]+154,string(obj_Controller.ownhealth)+string("/")+string(obj_Controller.ownhealthtotal)+string(" (")+string(round(obj_Controller.ownhealthpercent))+string("%)"));

//Draw SP
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+030,view_yview[0]+166,string("SP: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+033+string_width("SP: "),view_yview[0]+166,string(obj_Controller.ownsp)+string("/")+string(obj_Controller.ownsptotal)+string(" (")+string(round(obj_Controller.ownsppercent))+string("%)"));

//Draw Strength
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+030,view_yview[0]+178,string("Strength: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+033+string_width("Strength: "),view_yview[0]+178,string(obj_Controller.ownstrength));

//Draw Range
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+030,view_yview[0]+190,string("Range: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+033+string_width("Range: "),view_yview[0]+190,string(obj_Controller.attackrange));

//Draw Agility
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+030,view_yview[0]+202,string("Agility: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+033+string_width("Agility: "),view_yview[0]+202,string(obj_Controller.agility));

//Draw Defence
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+030,view_yview[0]+214,string("Defence: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+033+string_width("Defence: "),view_yview[0]+214,string(obj_Controller.defence));

//NEXT COLUMN

//Draw Coins
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+163,view_yview[0]+94,string("Coins: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+166+string_width("Coins: "),view_yview[0]+94,string(obj_Controller.money));

//Draw Quests
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+163,view_yview[0]+106,string("Quests: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+166+string_width("Quests: "),view_yview[0]+106,string(obj_Controller.questscomplete)+string("/")+string(obj_Controller.questmax)+string(" (")+string(obj_Controller.questpercent)+string("%)"));

//Draw Hitchain
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+163,view_yview[0]+118,string("Attack Chain: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+166+string_width("Attack Chain: "),view_yview[0]+118,string(obj_Controller.learnchain1)+string("/4"));

//Skip

//Skip

//Skip

//Draw Stats
flashalpha+=0.2;
if obj_Controller.ownstatpoint &gt; 0
{
    draw_set_alpha(1+0.5*sin(flashalpha))
    draw_set_color(c_orange)
    draw_rectangle(view_xview[0]+163,view_yview[0]+142,view_xview[0]+170+string_width("Stats: ")+string_width(string(obj_Controller.ownstatpoint)+string(" | ")+string(obj_Controller.ownstatpointused)),view_yview[0]+156,1);
    draw_set_color(c_white)
    draw_set_alpha(1)
}

draw_set_halign(fa_left);//:
draw_text(view_xview[0]+163,view_yview[0]+142,string("Stats: "));
draw_set_halign(fa_left);
draw_text(view_xview[0]+166+string_width("Stats: "),view_yview[0]+142,string(obj_Controller.ownstatpoint)+string(" | ")+string(obj_Controller.ownstatpointused));

//Draw HP
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+163,view_yview[0]+154,"HP (+20)");
draw_text(view_xview[0]+262,view_yview[0]+154,string("[")+string(obj_Controller.s_hp)+string("]"))

//Draw SP
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+163,view_yview[0]+166,"SP (+20)");
draw_text(view_xview[0]+262,view_yview[0]+166,string("[")+string(obj_Controller.s_sp)+string("]"))

//Draw Strength
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+163,view_yview[0]+178,"Strength (+1)");
draw_text(view_xview[0]+262,view_yview[0]+178,string("[")+string(obj_Controller.s_str)+string("]"))

//Draw Range
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+163,view_yview[0]+190,"Range (+2)");
draw_text(view_xview[0]+262,view_yview[0]+190,string("[")+string(obj_Controller.s_range)+string("]"))

//Draw Agility
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+163,view_yview[0]+202,"Agility (+1)");
draw_text(view_xview[0]+262,view_yview[0]+202,string("[")+string(obj_Controller.s_ag)+string("]"))

//Draw Defence
draw_set_halign(fa_left);//:
draw_text(view_xview[0]+163,view_yview[0]+214,"Defence (+1)");
draw_text(view_xview[0]+262,view_yview[0]+214,string("[")+string(obj_Controller.s_def)+string("]"))

for (i=0; i&lt;6; i+=1)
{
    if  mouse_x &gt;= view_xview[0]+245 &amp;&amp;
        mouse_x &lt;= view_xview[0]+260 &amp;&amp;
        mouse_y &gt;= view_yview[0]+157+12*i &amp;&amp;
        mouse_y &lt;= view_yview[0]+157+12+12*i
        {
            draw_sprite(spr_BtnLvup,1,view_xview[0]+245,view_yview[0]+157+12*i)
            if mouse_check_button_pressed(mb_left)
            {
                if obj_Controller.ownstatpoint &gt; 0
                {
                    if      i==0 {obj_Controller.ownstatpoint-=1;   obj_Controller.s_hp+=1;     obj_Controller.ownhealthtotal+=20;  obj_Controller.ownhealth+=20;   obj_Controller.ownstatpointused+=1;}
                    else if i==1 {obj_Controller.ownstatpoint-=1;   obj_Controller.s_sp+=1;     obj_Controller.ownsptotal+=20;      obj_Controller.ownsp+=20;       obj_Controller.ownstatpointused+=1;}
                    else if i==2 {obj_Controller.ownstatpoint-=1;   obj_Controller.s_str+=1;    obj_Controller.ownstrength+=1;      obj_Controller.ownstatpointused+=1;}
                    else if i==3 {obj_Controller.ownstatpoint-=1;   obj_Controller.s_range+=1;  obj_Controller.attackrange+=2;      obj_Controller.ownstatpointused+=1;}
                    else if i==4 {obj_Controller.ownstatpoint-=1;   obj_Controller.s_ag+=1;     obj_Controller.agility+=1;          obj_Controller.ownstatpointused+=1;}
                    else if i==5 {obj_Controller.ownstatpoint-=1;   obj_Controller.s_def+=1;    obj_Controller.defence+=1;          obj_Controller.ownstatpointused+=1;}
                }
            }
        }
        else
        {
            draw_sprite(spr_BtnLvup,0,view_xview[0]+245,view_yview[0]+157+12*i)
        }
}


//



if displayatkrange=1
{
    if instance_exists(obj_tdPlayer){draw_circle(obj_tdPlayer.x,obj_tdPlayer.y,obj_tdPlayer.attackrange,1)}  //Draw Player Attack range circle
}



draw_set_alpha(1)
}


/*
Lvl: ownlevel
exp: ownexp/ownexptotal(ownexppercent)           
Atk Speed: attackspeed                          Coins: money
Mov speed: tdmovespeed (pmovespeed)              Quests: questscomplete/questmax (questpercent)
Damage: ownmindamage - ownmaxdamage                 Hitchain: learnchain1 / 4


Skills: ownskillpoint | ownskillpointused         Stats: ownstatpoint | ownstatpointused
Hp: ownhealth / ownhealthtotal (ownhealthpercent)  HP (+20)       [s_hp]
SP: ownsp / ownsptotal (ownsppercent)            SP (+20)       [s_sp]
Strength: ownstrength                          Strength (+1)  [s_str]
Range: attackrange                             Range (+2)     [s_range]
Agility: agility                               Agility (+1)   [s_ag]
Defence: defence                               Defence (+1)   [s_def]
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
