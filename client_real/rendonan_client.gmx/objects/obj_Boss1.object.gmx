<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_DecessusP4</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>parent_monster</parentName>
  <maskName>spr_30x30mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/***************************************************
  ################ Monster Data ####################
 ***************************************************/
 

//Details
name                ="- Decessus -";
level               =15;
defence             =400;
aggrorange          =500;
ExperienceContent   =55+floor(random(37))
hptotal             =3420;
movespeed           =6;
attack              =35;
attackdelay         =18;
droprate            =2; //in percent
stopmove            =10;

/***************************************************
  ############## Boss Special data ##################
 ***************************************************/
//States:
//State 1 = red, aggressive, go after player
//State 2 = green, healing, suck up magic orbs to heal
//State 3 = yellow, spawning, spawns magic orbs
//State 4 = blue, shooting, suck up magic orbs, shoots projectiles on impact
state=1+round(random(3));
prevstate=state;
stateswitch=150+round(random(150));
spawn=300+random(60);








hp=hptotal;
hppercent=(hp/hptotal)*100
image_speed=0
rotation=0;
timer1=0;                                 //timer countdown random movement
pointx=x+random(x+80)-random(x-80)        //Start target x
pointy=y+random(y+80)-random(y-80)        //Start target y

timer2=0;
timer3=0;
hit=0;
inrange=false;


//Falling Ring
falling=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if stopmove &gt;0 {stopmove-=1}
if stopmove&lt;=0 {stopmove=10; hspeed=0; vspeed=0;}
hppercent=(hp/hptotal)*100
if hp &gt;= hptotal {hp=hptotal}
stateswitch-=1
if stateswitch&lt;=0
{
    //SS_PlaySound(global.fx_BossState);
    prevstate=state;
    state=1+round(random(3))
    stateswitch=150+round(random(150));
    if instance_exists(obj_MagicOrb)
    {
        obj_MagicOrb.updatecolor=1;
    }
}
if state=prevstate
{
    stateswitch=0;
}

if (instance_number(obj_MagicOrb) &gt;= 40 &amp;&amp; state != 2 &amp;&amp; state != 4)
{
    var cases;
    cases=2+2*round(random(1));
    state=cases;
}

if spawn &lt;= 0
{
    spawn=300+random(60);
    if state=4
    {
        for (i=0; i&lt;=3; i+=1)
        {
            instance_create(x-random(150)+random(300),y-random(150)+random(300),obj_MagicOrb);
        }
    }
    else if state=3
    {
        for (i=0; i&lt;=10; i+=1)
        {
            instance_create(x-random(150)+random(300),y-random(150)+random(300),obj_MagicOrb);
        }
    }
    else
    {
        for (i=0; i&lt;=4; i+=1)
        {
            instance_create(x-random(150)+random(300),y-random(150)+random(300),obj_MagicOrb);
        }
    }
}  

//States:
//State 1 = blue, aggressive, go after player
//State 2 = green, healing, suck up magic orbs to heal
//State 3 = yellow, spawning, spawns magic orbs
//State 4 = red, shooting, suck up magic orbs, shoots projectiles on impact
if state=1
{
    spawn-=10
    move_towards_point(obj_tdPlayer.x,obj_tdPlayer.y,movespeed);
}
if state=2
{
    spawn-=2
}
if state=3
{
    spawn-=16
}
if state=4
{
    spawn-=15
}


//Timer1 data :: MOVEMENT DIRECTION
timer1+=1
if timer1 &gt;= 250
{
pointx=x+random(x+80)-random(x-80)                //Start target x
pointy=y+random(y+80)-random(y-80)                //Start target y
timer1=0                                           //restart timer
}

//Timer2 data :: Attack
timer2+=1
if timer2 &gt;= 15
{
    if point_distance(x,y,obj_tdPlayer.x,obj_tdPlayer.y) &lt;= 15                              //Attack Player
    {
        monsterattack(1,0);
        //obj_Controller.ownhealth-=attack^-(0.01*obj_Controller.defence)
        //saypc(name +string(" hit you for ") +string(round(attack^-(0.01*obj_Controller.defence))) +string(" damage."),c_red);        
    }//Damage Formula
    timer2=0
}

//Getting hit by player
if instance_exists(obj_tdPlayer)
{
    if point_distance(x,y,obj_tdPlayer.x,obj_tdPlayer.y) &lt; obj_tdPlayer.attackrange         //if in player's attackrange
    {
        inrange=true;
        if obj_tdPlayer.hitting=1
        {
            //hit = (1/defence)*round(((0.6+random(0.4))*obj_Controller.ownstrength)^(1+0.05*obj_Controller.weapondamage))
            monsterattack(0,0);
            hp -= hit                                                                     //Taking Damage when Hit; Change to Player's damage with formula!  &lt;---------------
            create=instance_create(x+random(10)-random(10),y-15,obj_Boss1Hit)
            create.hurt = hit                                                              //Variable to set for damagetaker
            move_towards_point(obj_tdPlayer.x,obj_tdPlayer.y,-5)
            instance_create(x,y,obj_HitFX);
        }                                                                     
    }
    else
    {
        inrange=false;
    }
}
    
//define x and y position above 20% health
if hppercent &gt; 20
{
    setx=x;
    sety=y;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Death Script

if hp &lt;= 0
{
    instance_destroy();
    //SS_PlaySound(global.fx_Smash2);
    if instance_exists(obj_gGoldGTorb)
    {
        if distance_to_object(instance_nearest(x,y,obj_gGoldGTorb)) &gt;= instance_nearest(x,y,obj_gGoldGTorb).atkrange
        {
            Boss1Reward();
        }
    }
    else if !instance_exists(obj_gGoldGTorb)
    {
        Boss1Reward();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//hit by skill
if distance_to_object(obj_ActionImpale) &lt;= 15
{
    monsterattack(0,1);
    //hit = (1/defence)*round(((0.6+random(0.4))*1*obj_Controller.ownstrength)^(1+0.05*obj_Controller.weapondamage))
    hp -= hit                                                                     //Taking Damage when Hit; Change to Player's damage with formula!  &lt;---------------
    create=instance_create(x+random(10)-random(10),y-15,obj_Boss1Hit)
    create.hurt = hit                                                              //Variable to set for damagetaker
    move_towards_point(obj_ActionImpale.x,obj_ActionImpale.y,-4)
    instance_create(x,y,obj_HitFX);
}

//GroundShock
if distance_to_object(obj_ActionGroundshock) &lt;= 15
{
    monsterattack(0,2);
    //hit = 2+(1/defence)*round(((0.6+random(0.4))*0.5*obj_Controller.ownstrength)^(1+0.05*obj_Controller.weapondamage))
    hp -= hit                                                                     //Taking Damage when Hit; Change to Player's damage with formula!  &lt;---------------
    create=instance_create(x+random(10)-random(10),y-15,obj_Boss1Hit)
    create.hurt = hit                                                              //Variable to set for damagetaker
    move_towards_point(obj_ActionGroundshock.x,obj_ActionGroundshock.y,-6)
    instance_create(x,y,obj_HitFX);
}

//Energy Blast
if distance_to_object(obj_ActionEnergyBlast) &lt;=300
{
    if obj_ActionEnergyBlast.hitting=1
    {
        monsterattack(0,3);
        hp-=hit
        create=instance_create(x+random(10)-random(10),y-15,obj_Boss1Hit)
        create.hurt = hit                                                              //Variable to set for damagetaker
        move_towards_point(obj_ActionEnergyBlast.x,obj_ActionEnergyBlast.y,-35)
        instance_create(x,y,obj_HitFX);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state != 1
{
    if (x &lt;= 0.5*room_width - 300 || x &gt;= 0.5*room_width+300 || y &gt;= 0.5*room_height-300 || y &lt;= 0.5*room_height+300)
    {
        move_towards_point(0.5*room_width-200+round(random(400)),0.5*room_height-200+round(random(400)),0.5*movespeed);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rotation+=22;

draw_text(view_xview[0]+20,view_yview[0]+20,"Orbs in play: "+string(instance_number(obj_MagicOrb)));



//Rotation Animation
if state=1
{
    draw_sprite_ext(spr_DecessusP1,image_index,x,y,1,1,1.4*rotation,c_white,1);
    draw_sprite_ext(spr_DecessusP2,image_index,x,y,1,1,1*rotation,c_white,1);
    draw_sprite_ext(spr_DecessusP3,image_index,x,y,1,1,-rotation,c_white,1);
    draw_sprite_ext(spr_DecessusP4,image_index,x,y,1,1,2*rotation,c_white,1);
}
if state=2
{
    draw_sprite_ext(spr_DecessusP1,image_index,x,y,1,1,0.6*rotation,c_white,1);
    draw_sprite_ext(spr_DecessusP2,image_index,x,y,1,1,0.4*rotation,c_white,1);
    draw_sprite_ext(spr_DecessusP3,image_index,x,y,1,1,-0.6*rotation,c_white,1);
    draw_sprite_ext(spr_DecessusP4,image_index,x,y,1,1,2*rotation,c_white,1);
}
if state=3
{
    draw_sprite_ext(spr_DecessusP1,image_index,x,y,1,1,1.2*rotation,c_white,1);
    draw_sprite_ext(spr_DecessusP2,image_index,x,y,1,1,0.6*rotation,c_white,1);
    draw_sprite_ext(spr_DecessusP3,image_index,x,y,1,1,-rotation,c_white,1);
    draw_sprite_ext(spr_DecessusP4,image_index,x,y,1,1,2*rotation,c_white,1);
}
if state=4
{
    draw_sprite_ext(spr_DecessusP1,image_index,x,y,1,1,rotation,c_white,1);
    draw_sprite_ext(spr_DecessusP2,image_index,x,y,1,1,0.2*rotation,c_white,1);
    draw_sprite_ext(spr_DecessusP3,image_index,x,y,1,1,-1.4*rotation,c_white,1);
    draw_sprite_ext(spr_DecessusP4,image_index,x,y,1,1,1.5*rotation,c_white,1);
}

draw_set_halign(fa_center);
draw_set_alpha(0.6)

//draw black name background tag
draw_set_color(c_black)
draw_roundrect(view_xview[0]+500-5-0.5*string_width(name +string(" Lv") +string(level)),view_yview[0]+500,view_xview[0]+500+5+0.5*string_width(name +string(" Lv")+string(level)),view_yview[0]+515,0)


draw_set_alpha(1)
//Picking Text color depending on the players' and mobs' lvl
if obj_Controller.ownlevel - level &gt;= 2
{draw_set_color(c_white)}
else if obj_Controller.ownlevel - level &lt;= 1 &amp;&amp; obj_Controller.ownlevel - level &gt;= -1
{draw_set_color(c_lime)}
else if obj_Controller.ownlevel - level &lt;= -2 &amp;&amp; obj_Controller.ownlevel - level &gt;= -3
{draw_set_color(c_orange)}
else if obj_Controller.ownlevel - level &lt;= -4 &amp;&amp; obj_Controller.ownlevel - level &gt;= -5
{draw_set_color(c_red)}
else if obj_Controller.ownlevel - level &lt;= -6
{draw_set_color(c_fuchsia)}




draw_set_font(ft_Monster);
draw_text(view_xview[0]+500-2,view_yview[0]+500,name +string(" Lv") +string(level));
draw_healthbar(view_xview[0]+500,view_yview[0]+515,view_xview[0]+500+100,view_yview[0]+525,hppercent,c_black,c_red,c_green,0,1,0);
draw_healthbar(view_xview[0]+500,view_yview[0]+515,view_xview[0]+500-100,view_yview[0]+525,hppercent,c_black,c_red,c_green,0,1,0);

if (inrange)
{
    draw_sprite_ext(spr_Bradar1,0,x,y,1,1,0,c_white,0.5)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>77,73</point>
    <point>75,75</point>
  </PhysicsShapePoints>
</object>
