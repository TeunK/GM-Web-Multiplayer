<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>GMWebNET</name>
  <version>1.0.0</version>
  <packageID></packageID>
  <ProductID></ProductID>
  <date>06/08/15</date>
  <license>Free to use, also for commercial games.</license>
  <description></description>
  <helpfile></helpfile>
  <androidProps>0</androidProps>
  <iosProps>0</iosProps>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <maccompilerflags></maccompilerflags>
  <androidinject></androidinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <androidPermissions/>
  <IncludedResources/>
  <files>
    <file>
      <filename>GMWebNet.js</filename>
      <origname>extensions\GMWebNet.js</origname>
      <init></init>
      <final></final>
      <kind>5</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>wn_connect</name>
          <externalName>connect</externalName>
          <kind>11</kind>
          <help>wn_connect(server_ip, server_port) -- Connect to a server at ip (address) and port. Returns socket-ID</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>wn_disconnect</name>
          <externalName>disconnect</externalName>
          <kind>11</kind>
          <help>wn_disconnect(socket) -- Disconnect the socket connected to the server</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>wn_send_message</name>
          <externalName>send_message</externalName>
          <kind>11</kind>
          <help>wn_send_message(socket) -- Send message to server through socket</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>wn_receive_message</name>
          <externalName>receive_message</externalName>
          <kind>11</kind>
          <help>wn_receive_message(socket) -- while (wn_receive_message(socket)) -&gt; handle incoming message</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>wn_clear_buffer</name>
          <externalName>clear_buffer</externalName>
          <kind>11</kind>
          <help>wn_clear_buffer() -- clear buffer </help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>wn_write_short</name>
          <externalName>write_short</externalName>
          <kind>11</kind>
          <help>wn_write_short(value) -- write short type</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>wn_write_ushort</name>
          <externalName>write_ushort</externalName>
          <kind>11</kind>
          <help>wn_write_ushort(value) -- write unsigned short type (allow negative values)</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>wn_write_int</name>
          <externalName>write_int</externalName>
          <kind>11</kind>
          <help>wn_write_int(value) -- write integer type</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>wn_write_uint</name>
          <externalName>write_uint</externalName>
          <kind>11</kind>
          <help>wn_write_uint(value) -- write unsigned integer type (allow negative values)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>wn_write_float</name>
          <externalName>write_float</externalName>
          <kind>11</kind>
          <help>wn_write_float(value) -- write float type</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>wn_write_double</name>
          <externalName>write_double</externalName>
          <kind>11</kind>
          <help>wn_write_double(value) -- write double type</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>wn_write_chars</name>
          <externalName>write_chars</externalName>
          <kind>11</kind>
          <help>wn_write_chars(value) -- write character type</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>wn_write_byte</name>
          <externalName>write_byte</externalName>
          <kind>11</kind>
          <help>wn_write_byte(value) -- write byte type</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>wn_write_string</name>
          <externalName>write_string</externalName>
          <kind>11</kind>
          <help>wn_write_string(value) -- write string type</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>wn_read_short</name>
          <externalName>read_short</externalName>
          <kind>11</kind>
          <help>wn_read_short() -- read short type</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>wn_read_string</name>
          <externalName>read_string</externalName>
          <kind>11</kind>
          <help>wn_read_string() -- read string type</help>
          <returnType>1</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>wn_read_byte</name>
          <externalName>read_byte</externalName>
          <kind>11</kind>
          <help>wn_read_byte() -- read byte type</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>socket.io.js</filename>
      <origname>extensions\socket.io.js</origname>
      <init></init>
      <final></final>
      <kind>5</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions/>
      <constants/>
    </file>
  </files>
</extension>
